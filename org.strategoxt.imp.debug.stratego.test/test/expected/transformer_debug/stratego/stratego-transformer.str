module stratego-transformer

imports
  strategodebuglib


imports
  libstratego-lib
  libstratego-gpp
  libstratego-aterm
  lib/editor-common.generated
  trans-str


rules

  generate-aterm :
    (selected, position, ast, path, project-path) -> <r-exit(
                                                      | "stratego-transformer.str"
                                                      , "generate-aterm"
                                                      , LocationInfo("15", "3", "19", "27")
                                                      )> (filename, result)
    where r-enter(
          | "stratego-transformer.str"
          , "generate-aterm"
          , LocationInfo("15", "3", "19", "27")
          )
    where <s-var(
           | "stratego-transformer.str"
           , "generate-aterm"
           , "selected"
           , LocationInfo("16", "6", "16", "14")
           )> selected
          ; <s-var(
             | "stratego-transformer.str"
             , "generate-aterm"
             , "position"
             , LocationInfo("16", "16", "16", "24")
             )> position
          ; <s-var(
             | "stratego-transformer.str"
             , "generate-aterm"
             , "ast"
             , LocationInfo("16", "26", "16", "29")
             )> ast
          ; <s-var(
             | "stratego-transformer.str"
             , "generate-aterm"
             , "path"
             , LocationInfo("16", "31", "16", "35")
             )> path
          ; <s-var(
             | "stratego-transformer.str"
             , "generate-aterm"
             , "project-path"
             , LocationInfo("16", "37", "16", "49")
             )> project-path
    with (s-step(
          | "stratego-transformer.str"
          , "generate-aterm"
          , LocationInfo("18", "7", "18", "55")
          )
          ; filename := <s-step(
                         | "stratego-transformer.str"
                         , "generate-aterm"
                         , LocationInfo("18", "20", "18", "49")
                         )
                         ; guarantee-extension(|"aterm")> path
          ; <s-var(
             | "stratego-transformer.str"
             , "generate-aterm"
             , "filename"
             , LocationInfo("18", "7", "18", "15")
             )> filename)
         ; s-step(
           | "stratego-transformer.str"
           , "generate-aterm"
           , LocationInfo("19", "7", "19", "27")
           )
         ; result := selected
         ; <s-var(
            | "stratego-transformer.str"
            , "generate-aterm"
            , "result"
            , LocationInfo("19", "7", "19", "13")
            )> result


strategies
  main =
    s-enter(
    | "stratego-transformer.str"
    , "main"
    , LocationInfo("24", "2", "24", "81")
    )
    ; (s-step(
       | "stratego-transformer.str"
       , "main"
       , LocationInfo("24", "9", "24", "81")
       )
       ; option-wrap(
           s-step(
           | "stratego-transformer.str"
           , "main"
           , LocationInfo("24", "21", "24", "35")
           )
           ; create-options
         , s-step(
           | "stratego-transformer.str"
           , "main"
           , LocationInfo("24", "37", "24", "49")
           )
           ; create-usage
         , s-step(
           | "stratego-transformer.str"
           , "main"
           , LocationInfo("24", "51", "24", "71")
           )
           ; default-system-about
         , s-step(
           | "stratego-transformer.str"
           , "main"
           , LocationInfo("24", "73", "24", "80")
           )
           ; execute
         )
       < s-exit(
         | "stratego-transformer.str"
         , "main"
         , LocationInfo("24", "2", "24", "81")
         )
       + s-exit(
         | "stratego-transformer.str"
         , "main"
         , LocationInfo("24", "2", "24", "81")
         )
         ; fail)

  execute =
    s-enter(
    | "stratego-transformer.str"
    , "execute"
    , LocationInfo("26", "2", "37", "55")
    )
    ; (((s-step(
         | "stratego-transformer.str"
         , "execute"
         , LocationInfo("28", "3", "28", "35")
         )
         ; library-paths* := <s-step(
                              | "stratego-transformer.str"
                              , "execute"
                              , LocationInfo("28", "22", "28", "34")
                              )
                              ; get-config-I>
         ; <s-var(
            | "stratego-transformer.str"
            , "execute"
            , "library-paths*"
            , LocationInfo("28", "3", "28", "17")
            )> library-paths*)
        ; (s-step(
           | "stratego-transformer.str"
           , "execute"
           , LocationInfo("29", "5", "29", "45")
           )
           ; stratego-input-path := <s-step(
                                     | "stratego-transformer.str"
                                     , "execute"
                                     , LocationInfo("29", "29", "29", "39")
                                     )
                                     ; get-config> "-i"
           ; <s-var(
              | "stratego-transformer.str"
              , "execute"
              , "stratego-input-path"
              , LocationInfo("29", "5", "29", "24")
              )> stratego-input-path)
        ; (s-step(
           | "stratego-transformer.str"
           , "execute"
           , LocationInfo("30", "5", "30", "42")
           )
           ; output-base-path := <s-step(
                                  | "stratego-transformer.str"
                                  , "execute"
                                  , LocationInfo("30", "26", "30", "36")
                                  )
                                  ; get-config> "-o"
           ; <s-var(
              | "stratego-transformer.str"
              , "execute"
              , "output-base-path"
              , LocationInfo("30", "5", "30", "21")
              )> output-base-path)
        ; (s-step(
           | "stratego-transformer.str"
           , "execute"
           , LocationInfo("31", "5", "31", "47")
           )
           ; base-path := <s-step(
                           | "stratego-transformer.str"
                           , "execute"
                           , LocationInfo("31", "19", "31", "26")
                           )
                           ; dirname> stratego-input-path
           ; <s-var(
              | "stratego-transformer.str"
              , "execute"
              , "base-path"
              , LocationInfo("31", "5", "31", "14")
              )> base-path)
        ; (s-step(
           | "stratego-transformer.str"
           , "execute"
           , LocationInfo("32", "5", "32", "57")
           )
           ; stratego-file := <s-step(
                               | "stratego-transformer.str"
                               , "execute"
                               , LocationInfo("32", "23", "32", "36")
                               )
                               ; base-filename> stratego-input-path
           ; <s-var(
              | "stratego-transformer.str"
              , "execute"
              , "stratego-file"
              , LocationInfo("32", "5", "32", "18")
              )> stratego-file)
        ; <(s-step(
            | "stratego-transformer.str"
            , "execute"
            , LocationInfo("33", "6", "33", "22")
            )
            ; check-input-file)> stratego-input-path
        < (s-step(
           | "stratego-transformer.str"
           , "execute"
           , LocationInfo("35", "7", "35", "52")
           )
           ; !(base-path, output-base-path, stratego-file))
          ; s-step(
            | "stratego-transformer.str"
            , "execute"
            , LocationInfo("35", "55", "35", "91")
            )
          ; apply-debug-project(|library-paths*)
        + s-step(
          | "stratego-transformer.str"
          , "execute"
          , LocationInfo("37", "6", "37", "55")
          )
          ; debug(
              s-step(
              | "stratego-transformer.str"
              , "execute"
              , LocationInfo("37", "12", "37", "54")
              )
              ; !"Failure: Cannot add debug information! "
            ))
       < s-exit(
         | "stratego-transformer.str"
         , "execute"
         , LocationInfo("26", "2", "37", "55")
         )
       + s-exit(
         | "stratego-transformer.str"
         , "execute"
         , LocationInfo("26", "2", "37", "55")
         )
         ; fail)

  create-options =
    s-enter(
    | "stratego-transformer.str"
    , "create-options"
    , LocationInfo("42", "2", "72", "4")
    )
    ; ((s-step(
        | "stratego-transformer.str"
        , "create-options"
        , LocationInfo("43", "4", "46", "4")
        )
        ; Option(
            "--option1"
          , <(s-step(
              | "stratego-transformer.str"
              , "create-options"
              , LocationInfo("44", "8", "44", "18")
              )
              ; set-config)> ("--option1", ())
          , s-step(
            | "stratego-transformer.str"
            , "create-options"
            , LocationInfo("45", "7", "45", "54")
            )
            ; !"--option1        This is a an example option"
          )
        + s-step(
          | "stratego-transformer.str"
          , "create-options"
          , LocationInfo("47", "5", "50", "4")
          )
          ; Option(
              "--output-rtree"
            , <(s-step(
                | "stratego-transformer.str"
                , "create-options"
                , LocationInfo("48", "7", "48", "17")
                )
                ; set-config)> ("--output-rtree", ())
            , s-step(
              | "stratego-transformer.str"
              , "create-options"
              , LocationInfo("49", "6", "49", "63")
              )
              ; !"--output-rtree	Output rtree-files instead of str-files"
            )
        + s-step(
          | "stratego-transformer.str"
          , "create-options"
          , LocationInfo("51", "5", "54", "4")
          )
          ; ArgOption(
              "-i"
            , <(s-step(
                | "stratego-transformer.str"
                , "create-options"
                , LocationInfo("52", "7", "52", "17")
                )
                ; set-config)> ( "-i"
                               , <s-step(
                                  | "stratego-transformer.str"
                                  , "create-options"
                                  , LocationInfo("52", "27", "52", "29")
                                  )
                                  ; id>
                               )
            , s-step(
              | "stratego-transformer.str"
              , "create-options"
              , LocationInfo("53", "7", "53", "48")
              )
              ; !"-i file          Main stratego program"
            )
        + s-step(
          | "stratego-transformer.str"
          , "create-options"
          , LocationInfo("55", "9", "59", "14")
          )
          ; OptionCheck(
              <(s-step(
                | "stratego-transformer.str"
                , "create-options"
                , LocationInfo("56", "16", "56", "26")
                )
                ; set-config)> ("--help", ())
            , s-step(
              | "stratego-transformer.str"
              , "create-options"
              , LocationInfo("57", "15", "57", "35")
              )
              ; OptionOneCheck("-i")
            | "error: option -i is required"
            )
        + s-step(
          | "stratego-transformer.str"
          , "create-options"
          , LocationInfo("60", "5", "63", "4")
          )
          ; ArgOption(
              "-o"
            , <(s-step(
                | "stratego-transformer.str"
                , "create-options"
                , LocationInfo("61", "7", "61", "17")
                )
                ; set-config)> ( "-o"
                               , <s-step(
                                  | "stratego-transformer.str"
                                  , "create-options"
                                  , LocationInfo("61", "27", "61", "29")
                                  )
                                  ; id>
                               )
            , s-step(
              | "stratego-transformer.str"
              , "create-options"
              , LocationInfo("62", "7", "62", "48")
              )
              ; !"-o               Output base directory"
            )
        + s-step(
          | "stratego-transformer.str"
          , "create-options"
          , LocationInfo("64", "9", "68", "14")
          )
          ; OptionCheck(
              <(s-step(
                | "stratego-transformer.str"
                , "create-options"
                , LocationInfo("65", "16", "65", "26")
                )
                ; set-config)> ("--help", ())
            , s-step(
              | "stratego-transformer.str"
              , "create-options"
              , LocationInfo("66", "15", "66", "35")
              )
              ; OptionOneCheck("-o")
            | "error: option -o is required"
            )
        + s-step(
          | "stratego-transformer.str"
          , "create-options"
          , LocationInfo("69", "5", "72", "4")
          )
          ; ArgOption(
              "-I"
            , s-step(
              | "stratego-transformer.str"
              , "create-options"
              , LocationInfo("70", "6", "70", "43")
              )
              ; where(<(s-step(
                        | "stratego-transformer.str"
                        , "create-options"
                        , LocationInfo("70", "13", "70", "26")
                        )
                        ; extend-config)> ( "-I"
                                          , [ <s-step(
                                               | "stratego-transformer.str"
                                               , "create-options"
                                               , LocationInfo("70", "37", "70", "39")
                                               )
                                               ; id>
                                            ]
                                          ))
            , s-step(
              | "stratego-transformer.str"
              , "create-options"
              , LocationInfo("71", "7", "71", "159")
              )
              ; !"-I directory     Stratego files in this external directory will also be debug-transformed when they are used as imports by the main stratego program."
            ))
       < s-exit(
         | "stratego-transformer.str"
         , "create-options"
         , LocationInfo("42", "2", "72", "4")
         )
       + s-exit(
         | "stratego-transformer.str"
         , "create-options"
         , LocationInfo("42", "2", "72", "4")
         )
         ; fail)

  get-config-I =
    s-enter(
    | "stratego-transformer.str"
    , "get-config-I"
    , LocationInfo("73", "3", "74", "29")
    )
    ; ((<(s-step(
          | "stratego-transformer.str"
          , "get-config-I"
          , LocationInfo("74", "6", "74", "16")
          )
          ; get-config)> "-I"
        <+ s-step(
           | "stratego-transformer.str"
           , "get-config-I"
           , LocationInfo("74", "26", "74", "29")
           )
           ; ![])
       < s-exit(
         | "stratego-transformer.str"
         , "get-config-I"
         , LocationInfo("73", "3", "74", "29")
         )
       + s-exit(
         | "stratego-transformer.str"
         , "get-config-I"
         , LocationInfo("73", "3", "74", "29")
         )
         ; fail)

  check-input-file =
    s-enter(
    | "stratego-transformer.str"
    , "check-input-file"
    , LocationInfo("76", "2", "76", "123")
    )
    ; ((s-step(
        | "stratego-transformer.str"
        , "check-input-file"
        , LocationInfo("76", "21", "76", "41")
        )
        ; ?stratego-input-path)
       ; (s-step(
          | "stratego-transformer.str"
          , "check-input-file"
          , LocationInfo("76", "44", "76", "55")
          )
          ; file-exists
          <+ (s-step(
              | "stratego-transformer.str"
              , "check-input-file"
              , LocationInfo("76", "60", "76", "80")
              )
              ; !stratego-input-path)
             ; (s-step(
                | "stratego-transformer.str"
                , "check-input-file"
                , LocationInfo("76", "83", "76", "114")
                )
                ; debug(
                    s-step(
                    | "stratego-transformer.str"
                    , "check-input-file"
                    , LocationInfo("76", "89", "76", "113")
                    )
                    ; !"File does not exist: "
                  ))
             ; s-step(
               | "stratego-transformer.str"
               , "check-input-file"
               , LocationInfo("76", "117", "76", "121")
               )
             ; fail)
       < s-exit(
         | "stratego-transformer.str"
         , "check-input-file"
         , LocationInfo("76", "2", "76", "123")
         )
       + s-exit(
         | "stratego-transformer.str"
         , "check-input-file"
         , LocationInfo("76", "2", "76", "123")
         )
         ; fail)

  create-usage =
    s-enter(
    | "stratego-transformer.str"
    , "create-usage"
    , LocationInfo("78", "2", "87", "7")
    )
    ; (s-step(
       | "stratego-transformer.str"
       , "create-usage"
       , LocationInfo("79", "2", "87", "7")
       )
       ; default-system-usage(
           s-step(
           | "stratego-transformer.str"
           , "create-usage"
           , LocationInfo("80", "3", "80", "34")
           )
           ; !"Usage: option-demo [options]"
         , s-step(
           | "stratego-transformer.str"
           , "create-usage"
           , LocationInfo("81", "5", "86", "15")
           )
           ; !"   This is a test program to demonstrate use of
    parse-options and  generation of usage info
    from option and switch specificatios. These
    now contain usage info as additional third 
    argument."
         )
       < s-exit(
         | "stratego-transformer.str"
         , "create-usage"
         , LocationInfo("78", "2", "87", "7")
         )
       + s-exit(
         | "stratego-transformer.str"
         , "create-usage"
         , LocationInfo("78", "2", "87", "7")
         )
         ; fail)