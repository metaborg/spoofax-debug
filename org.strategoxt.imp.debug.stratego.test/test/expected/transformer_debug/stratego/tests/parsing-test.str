module tests/parsing-test

imports
  strategodebuglib


imports
  str-reader
  libstratego-lib
  gen-debug-info
  assert
  gen-lookup
  traverse-imports
  trans-str


imports
  libstratego-lib
  libstratego-sglr
  libstratego-xtc
  libstrc


strategies
  test-parse-localvar-1 =
    s-enter(
    | "tests/parsing-test.str"
    , "test-parse-localvar-1"
    , LocationInfo("21", "3", "33", "36")
    )
    ; ((s-step(
        | "tests/parsing-test.str"
        , "test-parse-localvar-1"
        , LocationInfo("22", "4", "22", "34")
        )
        ; echo(|"test-parse-localvar-1"))
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-localvar-1"
          , LocationInfo("23", "6", "23", "36")
          )
          ; (s-step(
             | "tests/parsing-test.str"
             , "test-parse-localvar-1"
             , LocationInfo("23", "6", "23", "21")
             )
             ; get-project-dir) => project-dir)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-localvar-1"
          , LocationInfo("24", "6", "24", "44")
          )
          ; (s-step(
             | "tests/parsing-test.str"
             , "test-parse-localvar-1"
             , LocationInfo("24", "6", "24", "26")
             )
             ; !"test/src/localvar") => input-base-dir)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-localvar-1"
          , LocationInfo("25", "6", "25", "51")
          )
          ; (s-step(
             | "tests/parsing-test.str"
             , "test-parse-localvar-1"
             , LocationInfo("25", "6", "25", "32")
             )
             ; !"test/generated/localvar") => output-base-dir)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-localvar-1"
          , LocationInfo("26", "6", "26", "33")
          )
          ; (s-step(
             | "tests/parsing-test.str"
             , "test-parse-localvar-1"
             , LocationInfo("26", "6", "26", "21")
             )
             ; !"localvar.str") => sma-file)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-localvar-1"
          , LocationInfo("27", "6", "27", "93")
          )
          ; <(s-step(
              | "tests/parsing-test.str"
              , "test-parse-localvar-1"
              , LocationInfo("27", "7", "27", "21")
              )
              ; concat-strings)> [project-dir, "/", input-base-dir, "/", sma-file] => absolute-location)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-localvar-1"
          , LocationInfo("28", "6", "28", "33")
          )
          ; echo(|"reading ast from: "))
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-localvar-1"
          , LocationInfo("29", "6", "29", "30")
          )
          ; echo(|absolute-location))
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-localvar-1"
          , LocationInfo("30", "6", "30", "55")
          )
          ; parse-stratego-with-locations(|absolute-location))
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-localvar-1"
          , LocationInfo("31", "6", "31", "19")
          )
          ; assert-module)
       ; s-step(
         | "tests/parsing-test.str"
         , "test-parse-localvar-1"
         , LocationInfo("33", "6", "33", "36")
         )
       ; echo(|"test-parse-localvar-1")
       < s-exit(
         | "tests/parsing-test.str"
         , "test-parse-localvar-1"
         , LocationInfo("21", "3", "33", "36")
         )
       + s-exit(
         | "tests/parsing-test.str"
         , "test-parse-localvar-1"
         , LocationInfo("21", "3", "33", "36")
         )
         ; fail)

  test-parse-test-prop-1 =
    s-enter(
    | "tests/parsing-test.str"
    , "test-parse-test-prop-1"
    , LocationInfo("36", "3", "48", "37")
    )
    ; ((s-step(
        | "tests/parsing-test.str"
        , "test-parse-test-prop-1"
        , LocationInfo("37", "4", "37", "35")
        )
        ; echo(|"test-parse-test-prop-1"))
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-test-prop-1"
          , LocationInfo("38", "6", "38", "36")
          )
          ; (s-step(
             | "tests/parsing-test.str"
             , "test-parse-test-prop-1"
             , LocationInfo("38", "6", "38", "21")
             )
             ; get-project-dir) => project-dir)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-test-prop-1"
          , LocationInfo("39", "6", "39", "45")
          )
          ; (s-step(
             | "tests/parsing-test.str"
             , "test-parse-test-prop-1"
             , LocationInfo("39", "6", "39", "27")
             )
             ; !"test/src/test-prop") => input-base-dir)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-test-prop-1"
          , LocationInfo("40", "6", "40", "52")
          )
          ; (s-step(
             | "tests/parsing-test.str"
             , "test-parse-test-prop-1"
             , LocationInfo("40", "6", "40", "33")
             )
             ; !"test/generated/test-prop") => output-base-dir)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-test-prop-1"
          , LocationInfo("41", "6", "41", "34")
          )
          ; (s-step(
             | "tests/parsing-test.str"
             , "test-parse-test-prop-1"
             , LocationInfo("41", "6", "41", "22")
             )
             ; !"test-prop.str") => sma-file)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-test-prop-1"
          , LocationInfo("42", "6", "42", "93")
          )
          ; <(s-step(
              | "tests/parsing-test.str"
              , "test-parse-test-prop-1"
              , LocationInfo("42", "7", "42", "21")
              )
              ; concat-strings)> [project-dir, "/", input-base-dir, "/", sma-file] => absolute-location)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-test-prop-1"
          , LocationInfo("43", "6", "43", "33")
          )
          ; echo(|"reading ast from: "))
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-test-prop-1"
          , LocationInfo("44", "6", "44", "30")
          )
          ; echo(|absolute-location))
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-test-prop-1"
          , LocationInfo("45", "6", "45", "55")
          )
          ; parse-stratego-with-locations(|absolute-location))
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-parse-test-prop-1"
          , LocationInfo("46", "6", "46", "19")
          )
          ; assert-module)
       ; s-step(
         | "tests/parsing-test.str"
         , "test-parse-test-prop-1"
         , LocationInfo("48", "6", "48", "37")
         )
       ; echo(|"test-parse-test-prop-1")
       < s-exit(
         | "tests/parsing-test.str"
         , "test-parse-test-prop-1"
         , LocationInfo("36", "3", "48", "37")
         )
       + s-exit(
         | "tests/parsing-test.str"
         , "test-parse-test-prop-1"
         , LocationInfo("36", "3", "48", "37")
         )
         ; fail)


strategies
  test-prefer-rtree =
    s-enter(
    | "tests/parsing-test.str"
    , "test-prefer-rtree"
    , LocationInfo("51", "2", "68", "4")
    )
    ; ((s-step(
        | "tests/parsing-test.str"
        , "test-prefer-rtree"
        , LocationInfo("52", "3", "52", "30")
        )
        ; debug(
            s-step(
            | "tests/parsing-test.str"
            , "test-prefer-rtree"
            , LocationInfo("52", "9", "52", "29")
            )
            ; !"test-prefer-rtree"
          ))
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-prefer-rtree"
          , LocationInfo("53", "5", "53", "15")
          )
          ; prefer-str)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-prefer-rtree"
          , LocationInfo("54", "3", "60", "4")
          )
          ; where(<(s-step(
                    | "tests/parsing-test.str"
                    , "test-prefer-rtree"
                    , LocationInfo("55", "4", "55", "14")
                    )
                    ; get-config)> "output-rtree"
                  < <(s-step(
                      | "tests/parsing-test.str"
                      , "test-prefer-rtree"
                      , LocationInfo("57", "4", "57", "26")
                      )
                      ; debug(
                          s-step(
                          | "tests/parsing-test.str"
                          , "test-prefer-rtree"
                          , LocationInfo("57", "10", "57", "25")
                          )
                          ; !"prefer rtree"
                        ))> ""
                  + <(s-step(
                      | "tests/parsing-test.str"
                      , "test-prefer-rtree"
                      , LocationInfo("59", "4", "59", "24")
                      )
                      ; debug(
                          s-step(
                          | "tests/parsing-test.str"
                          , "test-prefer-rtree"
                          , LocationInfo("59", "10", "59", "23")
                          )
                          ; !"prefer str"
                        ))> ""))
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-prefer-rtree"
          , LocationInfo("61", "5", "61", "17")
          )
          ; prefer-rtree)
       ; s-step(
         | "tests/parsing-test.str"
         , "test-prefer-rtree"
         , LocationInfo("62", "3", "68", "4")
         )
       ; where(<(s-step(
                 | "tests/parsing-test.str"
                 , "test-prefer-rtree"
                 , LocationInfo("63", "4", "63", "14")
                 )
                 ; get-config)> "output-rtree"
               < <(s-step(
                   | "tests/parsing-test.str"
                   , "test-prefer-rtree"
                   , LocationInfo("65", "4", "65", "26")
                   )
                   ; debug(
                       s-step(
                       | "tests/parsing-test.str"
                       , "test-prefer-rtree"
                       , LocationInfo("65", "10", "65", "25")
                       )
                       ; !"prefer rtree"
                     ))> ""
               + <(s-step(
                   | "tests/parsing-test.str"
                   , "test-prefer-rtree"
                   , LocationInfo("67", "4", "67", "24")
                   )
                   ; debug(
                       s-step(
                       | "tests/parsing-test.str"
                       , "test-prefer-rtree"
                       , LocationInfo("67", "10", "67", "23")
                       )
                       ; !"prefer str"
                     ))> "")
       < s-exit(
         | "tests/parsing-test.str"
         , "test-prefer-rtree"
         , LocationInfo("51", "2", "68", "4")
         )
       + s-exit(
         | "tests/parsing-test.str"
         , "test-prefer-rtree"
         , LocationInfo("51", "2", "68", "4")
         )
         ; fail)


strategies
  test-output-parse-stratego =
    s-enter(
    | "tests/parsing-test.str"
    , "test-output-parse-stratego"
    , LocationInfo("73", "2", "79", "45")
    )
    ; ((s-step(
        | "tests/parsing-test.str"
        , "test-output-parse-stratego"
        , LocationInfo("74", "3", "74", "42")
        )
        ; f := "test/src/localvar/localvar.rtree"
        ; <s-var(
           | "tests/parsing-test.str"
           , "test-output-parse-stratego"
           , "f"
           , LocationInfo("74", "3", "74", "4")
           )> f)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-output-parse-stratego"
          , LocationInfo("75", "5", "75", "116")
          )
          ; p := "/home/rlindeman/Documents/TU/strategoxt/spoofax-imp/source/org.strategoxt.imp.debug.stratego.transformer"
          ; <s-var(
             | "tests/parsing-test.str"
             , "test-output-parse-stratego"
             , "p"
             , LocationInfo("75", "5", "75", "6")
             )> p)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-output-parse-stratego"
          , LocationInfo("76", "5", "76", "41")
          )
          ; file := <s-step(
                     | "tests/parsing-test.str"
                     , "test-output-parse-stratego"
                     , LocationInfo("76", "14", "76", "28")
                     )
                     ; concat-strings> [p, "/", f]
          ; <s-var(
             | "tests/parsing-test.str"
             , "test-output-parse-stratego"
             , "file"
             , LocationInfo("76", "5", "76", "9")
             )> file)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-output-parse-stratego"
          , LocationInfo("77", "5", "77", "29")
          )
          ; test-test-parse-stratego)
       ; <(s-step(
           | "tests/parsing-test.str"
           , "test-output-parse-stratego"
           , LocationInfo("78", "6", "78", "23")
           )
           ; WriteToBinaryFile)> ( file
                                 , <s-step(
                                    | "tests/parsing-test.str"
                                    , "test-output-parse-stratego"
                                    , LocationInfo("78", "33", "78", "35")
                                    )
                                    ; id>
                                 )
       ; s-step(
         | "tests/parsing-test.str"
         , "test-output-parse-stratego"
         , LocationInfo("79", "5", "79", "45")
         )
       ; debug(
           s-step(
           | "tests/parsing-test.str"
           , "test-output-parse-stratego"
           , LocationInfo("79", "11", "79", "44")
           )
           ; !"end test-output-parse-stratego"
         )
       < s-exit(
         | "tests/parsing-test.str"
         , "test-output-parse-stratego"
         , LocationInfo("73", "2", "79", "45")
         )
       + s-exit(
         | "tests/parsing-test.str"
         , "test-output-parse-stratego"
         , LocationInfo("73", "2", "79", "45")
         )
         ; fail)

  test-test-parse-stratego =
    s-enter(
    | "tests/parsing-test.str"
    , "test-test-parse-stratego"
    , LocationInfo("82", "2", "106", "7")
    )
    ; ((s-step(
        | "tests/parsing-test.str"
        , "test-test-parse-stratego"
        , LocationInfo("83", "3", "83", "18")
        )
        ; debug(
            s-step(
            | "tests/parsing-test.str"
            , "test-test-parse-stratego"
            , LocationInfo("83", "9", "83", "17")
            )
            ; !"start"
          ))
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-test-parse-stratego"
          , LocationInfo("85", "5", "85", "42")
          )
          ; f := "test/src/localvar/localvar.str"
          ; <s-var(
             | "tests/parsing-test.str"
             , "test-test-parse-stratego"
             , "f"
             , LocationInfo("85", "5", "85", "6")
             )> f)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-test-parse-stratego"
          , LocationInfo("86", "5", "86", "12")
          )
          ; abspath)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-test-parse-stratego"
          , LocationInfo("87", "5", "87", "22")
          )
          ; debug(
              s-step(
              | "tests/parsing-test.str"
              , "test-test-parse-stratego"
              , LocationInfo("87", "11", "87", "21")
              )
              ; !"abspath"
            ))
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-test-parse-stratego"
          , LocationInfo("88", "5", "88", "116")
          )
          ; p := "/home/rlindeman/Documents/TU/strategoxt/spoofax-imp/source/org.strategoxt.imp.debug.stratego.transformer"
          ; <s-var(
             | "tests/parsing-test.str"
             , "test-test-parse-stratego"
             , "p"
             , LocationInfo("88", "5", "88", "6")
             )> p)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-test-parse-stratego"
          , LocationInfo("89", "5", "89", "41")
          )
          ; file := <s-step(
                     | "tests/parsing-test.str"
                     , "test-test-parse-stratego"
                     , LocationInfo("89", "14", "89", "28")
                     )
                     ; concat-strings> [p, "/", f]
          ; <s-var(
             | "tests/parsing-test.str"
             , "test-test-parse-stratego"
             , "file"
             , LocationInfo("89", "5", "89", "9")
             )> file)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-test-parse-stratego"
          , LocationInfo("90", "5", "90", "23")
          )
          ; parse-file := file
          ; <s-var(
             | "tests/parsing-test.str"
             , "test-test-parse-stratego"
             , "parse-file"
             , LocationInfo("90", "5", "90", "15")
             )> parse-file)
       ; (s-step(
          | "tests/parsing-test.str"
          , "test-test-parse-stratego"
          , LocationInfo("93", "5", "93", "22")
          )
          ; !FILE(parse-file))
       ; s-step(
         | "tests/parsing-test.str"
         , "test-test-parse-stratego"
         , LocationInfo("94", "8", "106", "7")
         )
       ; parse-stratego-trm(
         | ["-i", parse-file, "--preserve-locations"]
         )
       < s-exit(
         | "tests/parsing-test.str"
         , "test-test-parse-stratego"
         , LocationInfo("82", "2", "106", "7")
         )
       + s-exit(
         | "tests/parsing-test.str"
         , "test-test-parse-stratego"
         , LocationInfo("82", "2", "106", "7")
         )
         ; fail)