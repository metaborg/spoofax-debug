module traverse-imports

imports
  strategodebuglib


imports
  libstrc
  libstratego-xtc
  libstratego-rtg
  trans-str


strategies
  list-imports(|args) =
    s-enter(
    | "traverse-imports.str"
    , "list-imports"
    , LocationInfo("16", "2", "36", "59")
    )
    ; (where(<s-var(
              | "traverse-imports.str"
              , "list-imports"
              , "args"
              , LocationInfo("16", "16", "16", "20")
              )> args)
       ; (s-step(
          | "traverse-imports.str"
          , "list-imports"
          , LocationInfo("17", "3", "17", "9")
          )
          ; ?ffile)
       ; (s-step(
          | "traverse-imports.str"
          , "list-imports"
          , LocationInfo("18", "5", "18", "17")
          )
          ; !FILE(ffile))
       ; (s-step(
          | "traverse-imports.str"
          , "list-imports"
          , LocationInfo("20", "4", "28", "6")
          )
          ; where((s-step(
                   | "traverse-imports.str"
                   , "list-imports"
                   , LocationInfo("20", "10", "20", "12")
                   )
                   ; id)
                  ; (s-step(
                     | "traverse-imports.str"
                     , "list-imports"
                     , LocationInfo("21", "9", "21", "41")
                     )
                     ; incl := <s-step(
                                | "traverse-imports.str"
                                , "list-imports"
                                , LocationInfo("21", "18", "21", "28")
                                )
                                ; get-config
                                <+ s-step(
                                   | "traverse-imports.str"
                                   , "list-imports"
                                   , LocationInfo("21", "32", "21", "35")
                                   )
                                   ; ![]> "-I"
                     ; <s-var(
                        | "traverse-imports.str"
                        , "list-imports"
                        , "incl"
                        , LocationInfo("21", "9", "21", "13")
                        )> incl)
                  ; <(s-step(
                      | "traverse-imports.str"
                      , "list-imports"
                      , LocationInfo("27", "10", "27", "81")
                      )
                      ; parse-options(
                          s-step(
                          | "traverse-imports.str"
                          , "list-imports"
                          , LocationInfo("27", "24", "27", "45")
                          )
                          ; pack-stratego-options
                          <+ s-step(
                             | "traverse-imports.str"
                             , "list-imports"
                             , LocationInfo("27", "49", "27", "62")
                             )
                             ; input-options
                        , s-step(
                          | "traverse-imports.str"
                          , "list-imports"
                          , LocationInfo("27", "64", "27", "76")
                          )
                          ; system-usage
                        , s-step(
                          | "traverse-imports.str"
                          , "list-imports"
                          , LocationInfo("27", "78", "27", "80")
                          )
                          ; id
                        ))> [<s-step(
                              | "traverse-imports.str"
                              , "list-imports"
                              , LocationInfo("27", "85", "27", "91")
                              )
                              ; whoami
                              <+ s-step(
                                 | "traverse-imports.str"
                                 , "list-imports"
                                 , LocationInfo("27", "95", "27", "102")
                                 )
                                 ; !"strc">|args]))
       ; (s-step(
          | "traverse-imports.str"
          , "list-imports"
          , LocationInfo("30", "7", "30", "27")
          )
          ; pack-process-options)
       ; (s-step(
          | "traverse-imports.str"
          , "list-imports"
          , LocationInfo("31", "7", "31", "26")
          )
          ; pack-report-options)
       ; (s-step(
          | "traverse-imports.str"
          , "list-imports"
          , LocationInfo("32", "7", "32", "68")
          )
          ; where(s-step(
                  | "traverse-imports.str"
                  , "list-imports"
                  , LocationInfo("32", "13", "32", "30")
                  )
                  ; pack-include-path))
       ; s-step(
         | "traverse-imports.str"
         , "list-imports"
         , LocationInfo("36", "7", "36", "59")
         )
       ; (s-step(
          | "traverse-imports.str"
          , "list-imports"
          , LocationInfo("36", "7", "36", "42")
          )
          ; pack-stratego(
            | <s-step(
               | "traverse-imports.str"
               , "list-imports"
               , LocationInfo("36", "23", "36", "40")
               )
               ; pack-include-path>
            )) => (files, spec)
       < s-exit(
         | "traverse-imports.str"
         , "list-imports"
         , LocationInfo("16", "2", "36", "59")
         )
       + s-exit(
         | "traverse-imports.str"
         , "list-imports"
         , LocationInfo("16", "2", "36", "59")
         )
         ; fail)

  get-internal-files(|directories):
    absolute-location -> <r-exit(
                          | "traverse-imports.str"
                          , "get-internal-files"
                          , LocationInfo("42", "3", "56", "45")
                          )> real-files
    where r-enter(
          | "traverse-imports.str"
          , "get-internal-files"
          , LocationInfo("42", "3", "56", "45")
          )
    where <s-var(
           | "traverse-imports.str"
           , "get-internal-files"
           , "directories"
           , LocationInfo("42", "23", "42", "34")
           )> directories
    where <s-var(
           | "traverse-imports.str"
           , "get-internal-files"
           , "absolute-location"
           , LocationInfo("44", "4", "44", "21")
           )> absolute-location
    where (s-step(
           | "traverse-imports.str"
           , "get-internal-files"
           , LocationInfo("46", "5", "47", "32")
           )
           ; basic-args := ["--slack", "-i", absolute-location]
           ; <s-var(
              | "traverse-imports.str"
              , "get-internal-files"
              , "basic-args"
              , LocationInfo("46", "5", "46", "15")
              )> basic-args)
          ; (s-step(
             | "traverse-imports.str"
             , "get-internal-files"
             , LocationInfo("49", "7", "49", "54")
             )
             ; ext-args := <(s-step(
                             | "traverse-imports.str"
                             , "get-internal-files"
                             , LocationInfo("49", "20", "49", "33")
                             )
                             ; map(
                                 s-step(
                                 | "traverse-imports.str"
                                 , "get-internal-files"
                                 , LocationInfo("49", "24", "49", "32")
                                 )
                                 ; create-I
                               ))
                            ; s-step(
                              | "traverse-imports.str"
                              , "get-internal-files"
                              , LocationInfo("49", "35", "49", "41")
                              )
                            ; concat> directories
             ; <s-var(
                | "traverse-imports.str"
                , "get-internal-files"
                , "ext-args"
                , LocationInfo("49", "7", "49", "15")
                )> ext-args)
          ; <(s-step(
              | "traverse-imports.str"
              , "get-internal-files"
              , LocationInfo("51", "8", "51", "18")
              )
              ; set-config)> ("-I", directories)
          ; (s-step(
             | "traverse-imports.str"
             , "get-internal-files"
             , LocationInfo("52", "7", "52", "46")
             )
             ; args := <s-step(
                        | "traverse-imports.str"
                        , "get-internal-files"
                        , LocationInfo("52", "16", "52", "22")
                        )
                        ; concat> [basic-args, ext-args]
             ; <s-var(
                | "traverse-imports.str"
                , "get-internal-files"
                , "args"
                , LocationInfo("52", "7", "52", "11")
                )> args)
          ; <(s-step(
              | "traverse-imports.str"
              , "get-internal-files"
              , LocationInfo("54", "10", "54", "29")
              )
              ; list-imports(|args))> absolute-location
          ; (s-step(
             | "traverse-imports.str"
             , "get-internal-files"
             , LocationInfo("55", "7", "55", "18")
             )
             ; ?(files, _))
          ; s-step(
            | "traverse-imports.str"
            , "get-internal-files"
            , LocationInfo("56", "7", "56", "45")
            )
          ; real-files := <s-step(
                           | "traverse-imports.str"
                           , "get-internal-files"
                           , LocationInfo("56", "22", "56", "38")
                           )
                           ; filter(
                               s-step(
                               | "traverse-imports.str"
                               , "get-internal-files"
                               , LocationInfo("56", "29", "56", "37")
                               )
                               ; not(s-step(
                                     | "traverse-imports.str"
                                     , "get-internal-files"
                                     , LocationInfo("56", "33", "56", "36")
                                     )
                                     ; ?"")
                             )> files
          ; <s-var(
             | "traverse-imports.str"
             , "get-internal-files"
             , "real-files"
             , LocationInfo("56", "7", "56", "17")
             )> real-files

  create-I :
    directory -> <r-exit(
                  | "traverse-imports.str"
                  , "create-I"
                  , LocationInfo("58", "3", "59", "34")
                  )> ["-I", directory]
    where r-enter(
          | "traverse-imports.str"
          , "create-I"
          , LocationInfo("58", "3", "59", "34")
          )
    where <s-var(
           | "traverse-imports.str"
           , "create-I"
           , "directory"
           , LocationInfo("59", "4", "59", "13")
           )> directory

  handle-file(|base-path, output-base-path) =
    s-enter(
    | "traverse-imports.str"
    , "handle-file"
    , LocationInfo("68", "3", "77", "30")
    )
    ; (where(<s-var(
              | "traverse-imports.str"
              , "handle-file"
              , "base-path"
              , LocationInfo("68", "16", "68", "25")
              )> base-path
             ; <s-var(
                | "traverse-imports.str"
                , "handle-file"
                , "output-base-path"
                , LocationInfo("68", "27", "68", "43")
                )> output-base-path)
       ; (s-step(
          | "traverse-imports.str"
          , "handle-file"
          , LocationInfo("69", "4", "69", "27")
          )
          ; ?absolute-stratego-file)
       ; (s-step(
          | "traverse-imports.str"
          , "handle-file"
          , LocationInfo("70", "6", "70", "54")
          )
          ; where(<(s-step(
                    | "traverse-imports.str"
                    , "handle-file"
                    , LocationInfo("70", "13", "70", "29")
                    )
                    ; debug(
                        s-step(
                        | "traverse-imports.str"
                        , "handle-file"
                        , LocationInfo("70", "19", "70", "28")
                        )
                        ; !"file: "
                      ))> absolute-stratego-file))
       ; (s-step(
          | "traverse-imports.str"
          , "handle-file"
          , LocationInfo("71", "6", "71", "50")
          )
          ; (s-step(
             | "traverse-imports.str"
             , "handle-file"
             , LocationInfo("71", "6", "71", "28")
             )
             ; split-path(|base-path)) => (parent, rel-path))
       ; (s-step(
          | "traverse-imports.str"
          , "handle-file"
          , LocationInfo("72", "6", "72", "32")
          )
          ; sourceBasedir := base-path
          ; <s-var(
             | "traverse-imports.str"
             , "handle-file"
             , "sourceBasedir"
             , LocationInfo("72", "6", "72", "19")
             )> sourceBasedir)
       ; (s-step(
          | "traverse-imports.str"
          , "handle-file"
          , LocationInfo("73", "6", "73", "31")
          )
          ; inputfilePath := rel-path
          ; <s-var(
             | "traverse-imports.str"
             , "handle-file"
             , "inputfilePath"
             , LocationInfo("73", "6", "73", "19")
             )> inputfilePath)
       ; (s-step(
          | "traverse-imports.str"
          , "handle-file"
          , LocationInfo("74", "6", "74", "74")
          )
          ; outputfilename := <s-step(
                               | "traverse-imports.str"
                               , "handle-file"
                               , LocationInfo("74", "25", "74", "39")
                               )
                               ; concat-strings> [output-base-path, "/", rel-path]
          ; <s-var(
             | "traverse-imports.str"
             , "handle-file"
             , "outputfilename"
             , LocationInfo("74", "6", "74", "20")
             )> outputfilename)
       ; (s-step(
          | "traverse-imports.str"
          , "handle-file"
          , LocationInfo("75", "6", "75", "60")
          )
          ; args := (sourceBasedir, inputfilePath, outputfilename)
          ; <s-var(
             | "traverse-imports.str"
             , "handle-file"
             , "args"
             , LocationInfo("75", "6", "75", "10")
             )> args)
       ; <(s-step(
           | "traverse-imports.str"
           , "handle-file"
           , LocationInfo("77", "7", "77", "24")
           )
           ; apply-debug-trans)> args
       < s-exit(
         | "traverse-imports.str"
         , "handle-file"
         , LocationInfo("68", "3", "77", "30")
         )
       + s-exit(
         | "traverse-imports.str"
         , "handle-file"
         , LocationInfo("68", "3", "77", "30")
         )
         ; fail)

  split-path(|base-path):
    path -> <r-exit(
             | "traverse-imports.str"
             , "split-path"
             , LocationInfo("81", "3", "90", "59")
             )> (parent-path, child-path)
    where r-enter(
          | "traverse-imports.str"
          , "split-path"
          , LocationInfo("81", "3", "90", "59")
          )
    where <s-var(
           | "traverse-imports.str"
           , "split-path"
           , "base-path"
           , LocationInfo("81", "15", "81", "24")
           )> base-path
    where <s-var(
           | "traverse-imports.str"
           , "split-path"
           , "path"
           , LocationInfo("82", "4", "82", "8")
           )> path
    where <(s-step(
            | "traverse-imports.str"
            , "split-path"
            , LocationInfo("83", "11", "83", "41")
            )
            ; string-starts-with(|base-path))> path
    where (s-step(
           | "traverse-imports.str"
           , "split-path"
           , LocationInfo("85", "5", "85", "51")
           )
           ; sub-string-length := <s-step(
                                   | "traverse-imports.str"
                                   , "split-path"
                                   , LocationInfo("85", "27", "85", "40")
                                   )
                                   ; string-length> base-path
           ; <s-var(
              | "traverse-imports.str"
              , "split-path"
              , "sub-string-length"
              , LocationInfo("85", "5", "85", "22")
              )> sub-string-length)
          ; (s-step(
             | "traverse-imports.str"
             , "split-path"
             , LocationInfo("86", "7", "86", "49")
             )
             ; full-string-length := <s-step(
                                      | "traverse-imports.str"
                                      , "split-path"
                                      , LocationInfo("86", "30", "86", "43")
                                      )
                                      ; string-length> path
             ; <s-var(
                | "traverse-imports.str"
                , "split-path"
                , "full-string-length"
                , LocationInfo("86", "7", "86", "25")
                )> full-string-length)
          ; (s-step(
             | "traverse-imports.str"
             , "split-path"
             , LocationInfo("87", "7", "87", "43")
             )
             ; string-list := <s-step(
                               | "traverse-imports.str"
                               , "split-path"
                               , LocationInfo("87", "23", "87", "37")
                               )
                               ; explode-string> path
             ; <s-var(
                | "traverse-imports.str"
                , "split-path"
                , "string-list"
                , LocationInfo("87", "7", "87", "18")
                )> string-list)
          ; (s-step(
             | "traverse-imports.str"
             , "split-path"
             , LocationInfo("88", "7", "88", "61")
             )
             ; <(s-step(
                 | "traverse-imports.str"
                 , "split-path"
                 , LocationInfo("88", "8", "88", "36")
                 )
                 ; split-at(|sub-string-length))> string-list => (p0, p1))
          ; (s-step(
             | "traverse-imports.str"
             , "split-path"
             , LocationInfo("89", "7", "89", "41")
             )
             ; parent-path := <s-step(
                               | "traverse-imports.str"
                               , "split-path"
                               , LocationInfo("89", "23", "89", "37")
                               )
                               ; implode-string> p0
             ; <s-var(
                | "traverse-imports.str"
                , "split-path"
                , "parent-path"
                , LocationInfo("89", "7", "89", "18")
                )> parent-path)
          ; s-step(
            | "traverse-imports.str"
            , "split-path"
            , LocationInfo("90", "7", "90", "59")
            )
          ; child-path := <(s-step(
                            | "traverse-imports.str"
                            , "split-path"
                            , LocationInfo("90", "22", "90", "36")
                            )
                            ; implode-string)
                           ; s-step(
                             | "traverse-imports.str"
                             , "split-path"
                             , LocationInfo("90", "38", "90", "55")
                             )
                           ; ltrim-chars(
                               s-step(
                               | "traverse-imports.str"
                               , "split-path"
                               , LocationInfo("90", "50", "90", "54")
                               )
                               ; ?'/'
                             )> p1
          ; <s-var(
             | "traverse-imports.str"
             , "split-path"
             , "child-path"
             , LocationInfo("90", "7", "90", "17")
             )> child-path