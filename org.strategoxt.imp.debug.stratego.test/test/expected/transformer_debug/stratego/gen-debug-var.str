module gen-debug-var

imports
  strategodebuglib


imports
  libstratego-lib
  include/Test
  assert
  location-util
  gen-debug-var-arg
  str-reader


rules

  add-var-statements(|filename) =
    s-enter(
    | "gen-debug-var.str"
    , "add-var-statements"
    , LocationInfo("20", "2", "22", "47")
    )
    ; (where(<s-var(
              | "gen-debug-var.str"
              , "add-var-statements"
              , "filename"
              , LocationInfo("20", "22", "20", "30")
              )> filename)
       ; (s-step(
          | "gen-debug-var.str"
          , "add-var-statements"
          , LocationInfo("21", "3", "21", "45")
          )
          ; bottomup(
              s-step(
              | "gen-debug-var.str"
              , "add-var-statements"
              , LocationInfo("21", "12", "21", "44")
              )
              ; try(
                  s-step(
                  | "gen-debug-var.str"
                  , "add-var-statements"
                  , LocationInfo("21", "16", "21", "43")
                  )
                  ; add-var-in-r-def(|filename)
                )
            ))
       ; s-step(
         | "gen-debug-var.str"
         , "add-var-statements"
         , LocationInfo("22", "5", "22", "47")
         )
       ; bottomup(
           s-step(
           | "gen-debug-var.str"
           , "add-var-statements"
           , LocationInfo("22", "14", "22", "46")
           )
           ; try(
               s-step(
               | "gen-debug-var.str"
               , "add-var-statements"
               , LocationInfo("22", "18", "22", "45")
               )
               ; add-var-in-s-def(|filename)
             )
         )
       < s-exit(
         | "gen-debug-var.str"
         , "add-var-statements"
         , LocationInfo("20", "2", "22", "47")
         )
       + s-exit(
         | "gen-debug-var.str"
         , "add-var-statements"
         , LocationInfo("20", "2", "22", "47")
         )
         ; fail)

  add-var-in-r-def(|filename):
    RDefNoArgs(r-name, r){a} -> <r-exit(
                                 | "gen-debug-var.str"
                                 , "add-var-in-r-def"
                                 , LocationInfo("26", "2", "28", "52")
                                 )> RDefNoArgs(r-name, r'){a}
    where r-enter(
          | "gen-debug-var.str"
          , "add-var-in-r-def"
          , LocationInfo("26", "2", "28", "52")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-in-r-def"
           , "filename"
           , LocationInfo("26", "20", "26", "28")
           )> filename
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-in-r-def"
           , "r-name"
           , LocationInfo("27", "14", "27", "20")
           )> r-name
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-r-def"
             , "r"
             , LocationInfo("27", "22", "27", "23")
             )> r
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-r-def"
             , "a"
             , LocationInfo("27", "25", "27", "26")
             )> a
    where s-step(
          | "gen-debug-var.str"
          , "add-var-in-r-def"
          , LocationInfo("28", "9", "28", "52")
          )
          ; r' := <s-step(
                   | "gen-debug-var.str"
                   , "add-var-in-r-def"
                   , LocationInfo("28", "16", "28", "49")
                   )
                   ; var-wrap-r(|filename, r-name, [])> r
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-r-def"
             , "r'"
             , LocationInfo("28", "9", "28", "11")
             )> r'

  add-var-in-r-def(|filename):
    d@RDef(r-name, s-args, r){a} -> <r-exit(
                                     | "gen-debug-var.str"
                                     , "add-var-in-r-def"
                                     , LocationInfo("29", "2", "31", "52")
                                     )> RDef(r-name, s-args, r'){a}
    where r-enter(
          | "gen-debug-var.str"
          , "add-var-in-r-def"
          , LocationInfo("29", "2", "31", "52")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-in-r-def"
           , "filename"
           , LocationInfo("29", "20", "29", "28")
           )> filename
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-in-r-def"
           , "d"
           , LocationInfo("30", "3", "30", "4")
           )> d
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-r-def"
             , "r-name"
             , LocationInfo("30", "10", "30", "16")
             )> r-name
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-r-def"
             , "s-args"
             , LocationInfo("30", "18", "30", "24")
             )> s-args
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-r-def"
             , "r"
             , LocationInfo("30", "26", "30", "27")
             )> r
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-r-def"
             , "a"
             , LocationInfo("30", "29", "30", "30")
             )> a
    where s-step(
          | "gen-debug-var.str"
          , "add-var-in-r-def"
          , LocationInfo("31", "9", "31", "52")
          )
          ; r' := <s-step(
                   | "gen-debug-var.str"
                   , "add-var-in-r-def"
                   , LocationInfo("31", "16", "31", "49")
                   )
                   ; var-wrap-r(|filename, r-name, [])> r
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-r-def"
             , "r'"
             , LocationInfo("31", "9", "31", "11")
             )> r'

  add-var-in-r-def(|filename):
    d@RDefT(r-name, s-args, t-args*, r){a} -> <r-exit(
                                               | "gen-debug-var.str"
                                               , "add-var-in-r-def"
                                               , LocationInfo("36", "2", "39", "57")
                                               )> RDefT(r-name, s-args, t-args*, r'){a}
    where r-enter(
          | "gen-debug-var.str"
          , "add-var-in-r-def"
          , LocationInfo("36", "2", "39", "57")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-in-r-def"
           , "filename"
           , LocationInfo("36", "20", "36", "28")
           )> filename
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-in-r-def"
           , "d"
           , LocationInfo("37", "3", "37", "4")
           )> d
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-r-def"
             , "r-name"
             , LocationInfo("37", "11", "37", "17")
             )> r-name
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-r-def"
             , "s-args"
             , LocationInfo("37", "19", "37", "25")
             )> s-args
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-r-def"
             , "t-args*"
             , LocationInfo("37", "27", "37", "34")
             )> t-args*
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-r-def"
             , "r"
             , LocationInfo("37", "36", "37", "37")
             )> r
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-r-def"
             , "a"
             , LocationInfo("37", "39", "37", "40")
             )> a
    where s-step(
          | "gen-debug-var.str"
          , "add-var-in-r-def"
          , LocationInfo("39", "9", "39", "57")
          )
          ; r' := <s-step(
                   | "gen-debug-var.str"
                   , "add-var-in-r-def"
                   , LocationInfo("39", "16", "39", "54")
                   )
                   ; var-wrap-r(|filename, r-name, t-args*)> r
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-r-def"
             , "r'"
             , LocationInfo("39", "9", "39", "11")
             )> r'

  add-var-in-s-def(|filename):
    SDefNoArgs(s-name, s){a} -> <r-exit(
                                 | "gen-debug-var.str"
                                 , "add-var-in-s-def"
                                 , LocationInfo("43", "2", "45", "52")
                                 )> SDefNoArgs(s-name, s'){a}
    where r-enter(
          | "gen-debug-var.str"
          , "add-var-in-s-def"
          , LocationInfo("43", "2", "45", "52")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-in-s-def"
           , "filename"
           , LocationInfo("43", "20", "43", "28")
           )> filename
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-in-s-def"
           , "s-name"
           , LocationInfo("44", "14", "44", "20")
           )> s-name
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-s-def"
             , "s"
             , LocationInfo("44", "22", "44", "23")
             )> s
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-s-def"
             , "a"
             , LocationInfo("44", "25", "44", "26")
             )> a
    where s-step(
          | "gen-debug-var.str"
          , "add-var-in-s-def"
          , LocationInfo("45", "9", "45", "52")
          )
          ; s' := <s-step(
                   | "gen-debug-var.str"
                   , "add-var-in-s-def"
                   , LocationInfo("45", "16", "45", "49")
                   )
                   ; var-wrap-s(|filename, s-name, [])> s
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-s-def"
             , "s'"
             , LocationInfo("45", "9", "45", "11")
             )> s'

  add-var-in-s-def(|filename):
    SDef(s-name, s-args, s){a} -> <r-exit(
                                   | "gen-debug-var.str"
                                   , "add-var-in-s-def"
                                   , LocationInfo("46", "2", "48", "52")
                                   )> SDef(s-name, s-args, s'){a}
    where r-enter(
          | "gen-debug-var.str"
          , "add-var-in-s-def"
          , LocationInfo("46", "2", "48", "52")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-in-s-def"
           , "filename"
           , LocationInfo("46", "20", "46", "28")
           )> filename
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-in-s-def"
           , "s-name"
           , LocationInfo("47", "8", "47", "14")
           )> s-name
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-s-def"
             , "s-args"
             , LocationInfo("47", "16", "47", "22")
             )> s-args
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-s-def"
             , "s"
             , LocationInfo("47", "24", "47", "25")
             )> s
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-s-def"
             , "a"
             , LocationInfo("47", "27", "47", "28")
             )> a
    where s-step(
          | "gen-debug-var.str"
          , "add-var-in-s-def"
          , LocationInfo("48", "9", "48", "52")
          )
          ; s' := <s-step(
                   | "gen-debug-var.str"
                   , "add-var-in-s-def"
                   , LocationInfo("48", "16", "48", "49")
                   )
                   ; var-wrap-s(|filename, s-name, [])> s
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-s-def"
             , "s'"
             , LocationInfo("48", "9", "48", "11")
             )> s'

  add-var-in-s-def(|filename):
    SDefT(s-name, s-args, t-args*, s){a} -> <r-exit(
                                             | "gen-debug-var.str"
                                             , "add-var-in-s-def"
                                             , LocationInfo("49", "2", "51", "57")
                                             )> SDefT(s-name, s-args, t-args*, s'){a}
    where r-enter(
          | "gen-debug-var.str"
          , "add-var-in-s-def"
          , LocationInfo("49", "2", "51", "57")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-in-s-def"
           , "filename"
           , LocationInfo("49", "20", "49", "28")
           )> filename
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-in-s-def"
           , "s-name"
           , LocationInfo("50", "9", "50", "15")
           )> s-name
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-s-def"
             , "s-args"
             , LocationInfo("50", "16", "50", "22")
             )> s-args
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-s-def"
             , "t-args*"
             , LocationInfo("50", "24", "50", "31")
             )> t-args*
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-s-def"
             , "s"
             , LocationInfo("50", "33", "50", "34")
             )> s
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-s-def"
             , "a"
             , LocationInfo("50", "36", "50", "37")
             )> a
    where s-step(
          | "gen-debug-var.str"
          , "add-var-in-s-def"
          , LocationInfo("51", "9", "51", "57")
          )
          ; s' := <s-step(
                   | "gen-debug-var.str"
                   , "add-var-in-s-def"
                   , LocationInfo("51", "16", "51", "54")
                   )
                   ; var-wrap-s(|filename, s-name, t-args*)> s
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-in-s-def"
             , "s'"
             , LocationInfo("51", "9", "51", "11")
             )> s'

  var-wrap-s(|filename, name, t-args*) =
    s-enter(
    | "gen-debug-var.str"
    , "var-wrap-s"
    , LocationInfo("55", "2", "66", "8")
    )
    ; (where(<s-var(
              | "gen-debug-var.str"
              , "var-wrap-s"
              , "filename"
              , LocationInfo("55", "14", "55", "22")
              )> filename
             ; <s-var(
                | "gen-debug-var.str"
                , "var-wrap-s"
                , "name"
                , LocationInfo("55", "24", "55", "28")
                )> name
             ; <s-var(
                | "gen-debug-var.str"
                , "var-wrap-s"
                , "t-args*"
                , LocationInfo("55", "30", "55", "37")
                )> t-args*)
       ; (s-step(
          | "gen-debug-var.str"
          , "var-wrap-s"
          , LocationInfo("57", "6", "57", "69")
          )
          ; s := <s-step(
                  | "gen-debug-var.str"
                  , "var-wrap-s"
                  , LocationInfo("57", "12", "57", "68")
                  )
                  ; bottomup(
                      s-step(
                      | "gen-debug-var.str"
                      , "var-wrap-s"
                      , LocationInfo("57", "21", "57", "67")
                      )
                      ; try(
                          s-step(
                          | "gen-debug-var.str"
                          , "var-wrap-s"
                          , LocationInfo("57", "25", "57", "66")
                          )
                          ; match-assign-build-s-var(|filename, name)
                        )
                    )>
          ; <s-var(
             | "gen-debug-var.str"
             , "var-wrap-s"
             , "s"
             , LocationInfo("57", "6", "57", "7")
             )> s)
       ; (<(s-step(
            | "gen-debug-var.str"
            , "var-wrap-s"
            , LocationInfo("61", "11", "61", "58")
            )
            ; t-args-to-s-var-where-strategy(|filename, name))> t-args*
          < s-step(
            | "gen-debug-var.str"
            , "var-wrap-s"
            , LocationInfo("63", "11", "63", "35")
            )
            ; combine-s-and-clause(|s)
          + s-step(
            | "gen-debug-var.str"
            , "var-wrap-s"
            , LocationInfo("65", "11", "65", "13")
            )
            ; !s)
       < s-exit(
         | "gen-debug-var.str"
         , "var-wrap-s"
         , LocationInfo("55", "2", "66", "8")
         )
       + s-exit(
         | "gen-debug-var.str"
         , "var-wrap-s"
         , LocationInfo("55", "2", "66", "8")
         )
         ; fail)

  combine-s-and-clause(|s):
    clause -> <r-exit(
               | "gen-debug-var.str"
               , "combine-s-and-clause"
               , LocationInfo("77", "2", "78", "27")
               )> Seq(clause, s)
    where r-enter(
          | "gen-debug-var.str"
          , "combine-s-and-clause"
          , LocationInfo("77", "2", "78", "27")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "combine-s-and-clause"
           , "s"
           , LocationInfo("77", "24", "77", "25")
           )> s
    where <s-var(
           | "gen-debug-var.str"
           , "combine-s-and-clause"
           , "clause"
           , LocationInfo("78", "3", "78", "9")
           )> clause

  var-wrap-s(|filename, name) =
    s-enter(
    | "gen-debug-var.str"
    , "var-wrap-s"
    , LocationInfo("81", "2", "81", "63")
    )
    ; (where(<s-var(
              | "gen-debug-var.str"
              , "var-wrap-s"
              , "filename"
              , LocationInfo("81", "14", "81", "22")
              )> filename
             ; <s-var(
                | "gen-debug-var.str"
                , "var-wrap-s"
                , "name"
                , LocationInfo("81", "24", "81", "28")
                )> name)
       ; s-step(
         | "gen-debug-var.str"
         , "var-wrap-s"
         , LocationInfo("81", "32", "81", "63")
         )
       ; var-wrap-s(|filename, name, [])
       < s-exit(
         | "gen-debug-var.str"
         , "var-wrap-s"
         , LocationInfo("81", "2", "81", "63")
         )
       + s-exit(
         | "gen-debug-var.str"
         , "var-wrap-s"
         , LocationInfo("81", "2", "81", "63")
         )
         ; fail)

  var-wrap-r(|filename, r-name, t-args*):
    RuleNoCond(match-term, build-term){a} -> <r-exit(
                                              | "gen-debug-var.str"
                                              , "var-wrap-r"
                                              , LocationInfo("85", "5", "92", "78")
                                              )> Rule(match-term, build-term', clauses'*){a}
    where r-enter(
          | "gen-debug-var.str"
          , "var-wrap-r"
          , LocationInfo("85", "5", "92", "78")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "var-wrap-r"
           , "filename"
           , LocationInfo("85", "17", "85", "25")
           )> filename
          ; <s-var(
             | "gen-debug-var.str"
             , "var-wrap-r"
             , "r-name"
             , LocationInfo("85", "27", "85", "33")
             )> r-name
          ; <s-var(
             | "gen-debug-var.str"
             , "var-wrap-r"
             , "t-args*"
             , LocationInfo("85", "35", "85", "42")
             )> t-args*
    where <s-var(
           | "gen-debug-var.str"
           , "var-wrap-r"
           , "match-term"
           , LocationInfo("86", "17", "86", "27")
           )> match-term
          ; <s-var(
             | "gen-debug-var.str"
             , "var-wrap-r"
             , "build-term"
             , LocationInfo("86", "29", "86", "39")
             )> build-term
          ; <s-var(
             | "gen-debug-var.str"
             , "var-wrap-r"
             , "a"
             , LocationInfo("86", "41", "86", "42")
             )> a
    with (s-step(
          | "gen-debug-var.str"
          , "var-wrap-r"
          , LocationInfo("90", "7", "90", "64")
          )
          ; build-term' := <s-step(
                            | "gen-debug-var.str"
                            , "var-wrap-r"
                            , LocationInfo("90", "23", "90", "52")
                            )
                            ; var-wrap-s(|filename, r-name)> build-term
          ; <s-var(
             | "gen-debug-var.str"
             , "var-wrap-r"
             , "build-term'"
             , LocationInfo("90", "7", "90", "18")
             )> build-term')
         ; (s-step(
            | "gen-debug-var.str"
            , "var-wrap-r"
            , LocationInfo("91", "6", "91", "73")
            )
            ; clauses* := <s-step(
                           | "gen-debug-var.str"
                           , "var-wrap-r"
                           , LocationInfo("91", "19", "91", "61")
                           )
                           ; try-s-var-for-match(|filename, r-name, [])> match-term
            ; <s-var(
               | "gen-debug-var.str"
               , "var-wrap-r"
               , "clauses*"
               , LocationInfo("91", "6", "91", "14")
               )> clauses*)
         ; s-step(
           | "gen-debug-var.str"
           , "var-wrap-r"
           , LocationInfo("92", "6", "92", "78")
           )
         ; clauses'* := <s-step(
                         | "gen-debug-var.str"
                         , "var-wrap-r"
                         , LocationInfo("92", "20", "92", "69")
                         )
                         ; try-s-var-for-t-args(|filename, r-name, clauses*)> t-args*
         ; <s-var(
            | "gen-debug-var.str"
            , "var-wrap-r"
            , "clauses'*"
            , LocationInfo("92", "6", "92", "15")
            )> clauses'*

  var-wrap-r(|filename, r-name, t-args*):
    Rule(match-term, build-term, rule-cond){a} -> <r-exit(
                                                   | "gen-debug-var.str"
                                                   , "var-wrap-r"
                                                   , LocationInfo("107", "2", "121", "66")
                                                   )> Rule(match-term, build-term', clauses'*){a}
    where r-enter(
          | "gen-debug-var.str"
          , "var-wrap-r"
          , LocationInfo("107", "2", "121", "66")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "var-wrap-r"
           , "filename"
           , LocationInfo("107", "14", "107", "22")
           )> filename
          ; <s-var(
             | "gen-debug-var.str"
             , "var-wrap-r"
             , "r-name"
             , LocationInfo("107", "24", "107", "30")
             )> r-name
          ; <s-var(
             | "gen-debug-var.str"
             , "var-wrap-r"
             , "t-args*"
             , LocationInfo("107", "32", "107", "39")
             )> t-args*
    where <s-var(
           | "gen-debug-var.str"
           , "var-wrap-r"
           , "match-term"
           , LocationInfo("108", "8", "108", "18")
           )> match-term
          ; <s-var(
             | "gen-debug-var.str"
             , "var-wrap-r"
             , "build-term"
             , LocationInfo("108", "20", "108", "30")
             )> build-term
          ; <s-var(
             | "gen-debug-var.str"
             , "var-wrap-r"
             , "rule-cond"
             , LocationInfo("108", "32", "108", "41")
             )> rule-cond
          ; <s-var(
             | "gen-debug-var.str"
             , "var-wrap-r"
             , "a"
             , LocationInfo("108", "43", "108", "44")
             )> a
    where (s-step(
           | "gen-debug-var.str"
           , "var-wrap-r"
           , LocationInfo("112", "13", "112", "79")
           )
           ; rule-cond'* := <s-step(
                             | "gen-debug-var.str"
                             , "var-wrap-r"
                             , LocationInfo("112", "29", "112", "68")
                             )
                             ; add-var-to-rule-cond(|filename, r-name)> rule-cond
           ; <s-var(
              | "gen-debug-var.str"
              , "var-wrap-r"
              , "rule-cond'*"
              , LocationInfo("112", "13", "112", "24")
              )> rule-cond'*)
          ; (s-step(
             | "gen-debug-var.str"
             , "var-wrap-r"
             , LocationInfo("114", "6", "114", "82")
             )
             ; clauses* := <s-step(
                            | "gen-debug-var.str"
                            , "var-wrap-r"
                            , LocationInfo("114", "19", "114", "70")
                            )
                            ; try-s-var-for-match(|filename, r-name, rule-cond'*)> match-term
             ; <s-var(
                | "gen-debug-var.str"
                , "var-wrap-r"
                , "clauses*"
                , LocationInfo("114", "6", "114", "14")
                )> clauses*)
          ; (s-step(
             | "gen-debug-var.str"
             , "var-wrap-r"
             , LocationInfo("120", "9", "120", "81")
             )
             ; clauses'* := <s-step(
                             | "gen-debug-var.str"
                             , "var-wrap-r"
                             , LocationInfo("120", "23", "120", "72")
                             )
                             ; try-s-var-for-t-args(|filename, r-name, clauses*)> t-args*
             ; <s-var(
                | "gen-debug-var.str"
                , "var-wrap-r"
                , "clauses'*"
                , LocationInfo("120", "9", "120", "18")
                )> clauses'*)
          ; s-step(
            | "gen-debug-var.str"
            , "var-wrap-r"
            , LocationInfo("121", "9", "121", "66")
            )
          ; build-term' := <s-step(
                            | "gen-debug-var.str"
                            , "var-wrap-r"
                            , LocationInfo("121", "25", "121", "54")
                            )
                            ; var-wrap-s(|filename, r-name)> build-term
          ; <s-var(
             | "gen-debug-var.str"
             , "var-wrap-r"
             , "build-term'"
             , LocationInfo("121", "9", "121", "20")
             )> build-term'

  try-s-var-for-match(|filename, r-name, clauses*) =
    s-enter(
    | "gen-debug-var.str"
    , "try-s-var-for-match"
    , LocationInfo("126", "2", "131", "17")
    )
    ; (where(<s-var(
              | "gen-debug-var.str"
              , "try-s-var-for-match"
              , "filename"
              , LocationInfo("126", "23", "126", "31")
              )> filename
             ; <s-var(
                | "gen-debug-var.str"
                , "try-s-var-for-match"
                , "r-name"
                , LocationInfo("126", "33", "126", "39")
                )> r-name
             ; <s-var(
                | "gen-debug-var.str"
                , "try-s-var-for-match"
                , "clauses*"
                , LocationInfo("126", "41", "126", "49")
                )> clauses*)
       ; (s-step(
          | "gen-debug-var.str"
          , "try-s-var-for-match"
          , LocationInfo("127", "4", "127", "67")
          )
          ; match-clause := <s-step(
                             | "gen-debug-var.str"
                             , "try-s-var-for-match"
                             , LocationInfo("127", "21", "127", "66")
                             )
                             ; match-term-to-s-var-clause(|filename, r-name)>
          ; <s-var(
             | "gen-debug-var.str"
             , "try-s-var-for-match"
             , "match-clause"
             , LocationInfo("127", "4", "127", "16")
             )> match-clause
          < <(s-step(
              | "gen-debug-var.str"
              , "try-s-var-for-match"
              , LocationInfo("129", "8", "129", "14")
              )
              ; insert)> (0, match-clause, clauses*)
          + s-step(
            | "gen-debug-var.str"
            , "try-s-var-for-match"
            , LocationInfo("131", "7", "131", "16")
            )
            ; !clauses*)
       < s-exit(
         | "gen-debug-var.str"
         , "try-s-var-for-match"
         , LocationInfo("126", "2", "131", "17")
         )
       + s-exit(
         | "gen-debug-var.str"
         , "try-s-var-for-match"
         , LocationInfo("126", "2", "131", "17")
         )
         ; fail)

  try-s-var-for-t-args(|filename, r-name, clauses*) =
    s-enter(
    | "gen-debug-var.str"
    , "try-s-var-for-t-args"
    , LocationInfo("134", "5", "139", "17")
    )
    ; (where(<s-var(
              | "gen-debug-var.str"
              , "try-s-var-for-t-args"
              , "filename"
              , LocationInfo("134", "27", "134", "35")
              )> filename
             ; <s-var(
                | "gen-debug-var.str"
                , "try-s-var-for-t-args"
                , "r-name"
                , LocationInfo("134", "37", "134", "43")
                )> r-name
             ; <s-var(
                | "gen-debug-var.str"
                , "try-s-var-for-t-args"
                , "clauses*"
                , LocationInfo("134", "45", "134", "53")
                )> clauses*)
       ; (s-step(
          | "gen-debug-var.str"
          , "try-s-var-for-t-args"
          , LocationInfo("135", "8", "135", "74")
          )
          ; t-args-clause := <s-step(
                              | "gen-debug-var.str"
                              , "try-s-var-for-t-args"
                              , LocationInfo("135", "26", "135", "73")
                              )
                              ; t-args-to-s-var-where-clause(|filename, r-name)>
          ; <s-var(
             | "gen-debug-var.str"
             , "try-s-var-for-t-args"
             , "t-args-clause"
             , LocationInfo("135", "8", "135", "21")
             )> t-args-clause
          < <(s-step(
              | "gen-debug-var.str"
              , "try-s-var-for-t-args"
              , LocationInfo("137", "8", "137", "14")
              )
              ; insert)> (0, t-args-clause, clauses*)
          + s-step(
            | "gen-debug-var.str"
            , "try-s-var-for-t-args"
            , LocationInfo("139", "7", "139", "16")
            )
            ; !clauses*)
       < s-exit(
         | "gen-debug-var.str"
         , "try-s-var-for-t-args"
         , LocationInfo("134", "5", "139", "17")
         )
       + s-exit(
         | "gen-debug-var.str"
         , "try-s-var-for-t-args"
         , LocationInfo("134", "5", "139", "17")
         )
         ; fail)

  add-var-to-rule-cond(|filename, r-name):
    clause-list* -> <r-exit(
                     | "gen-debug-var.str"
                     , "add-var-to-rule-cond"
                     , LocationInfo("144", "2", "147", "67")
                     )> clause-list'*
    where r-enter(
          | "gen-debug-var.str"
          , "add-var-to-rule-cond"
          , LocationInfo("144", "2", "147", "67")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-to-rule-cond"
           , "filename"
           , LocationInfo("144", "24", "144", "32")
           )> filename
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-to-rule-cond"
             , "r-name"
             , LocationInfo("144", "34", "144", "40")
             )> r-name
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-to-rule-cond"
           , "clause-list*"
           , LocationInfo("145", "3", "145", "15")
           )> clause-list*
    where <(s-step(
            | "gen-debug-var.str"
            , "add-var-to-rule-cond"
            , LocationInfo("146", "10", "146", "17")
            )
            ; is-list)> clause-list*
          ; s-step(
            | "gen-debug-var.str"
            , "add-var-to-rule-cond"
            , LocationInfo("147", "5", "147", "67")
            )
          ; clause-list'* := <s-step(
                              | "gen-debug-var.str"
                              , "add-var-to-rule-cond"
                              , LocationInfo("147", "23", "147", "66")
                              )
                              ; map(
                                  s-step(
                                  | "gen-debug-var.str"
                                  , "add-var-to-rule-cond"
                                  , LocationInfo("147", "27", "147", "65")
                                  )
                                  ; add-s-var-to-clause(|filename, r-name)
                                )>
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-to-rule-cond"
             , "clause-list'*"
             , LocationInfo("147", "5", "147", "18")
             )> clause-list'*

  add-var-to-rule-cond(|filename, r-name):
    s -> <r-exit(
          | "gen-debug-var.str"
          , "add-var-to-rule-cond"
          , LocationInfo("151", "2", "155", "38")
          )> clause-list*
    where r-enter(
          | "gen-debug-var.str"
          , "add-var-to-rule-cond"
          , LocationInfo("151", "2", "155", "38")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-to-rule-cond"
           , "filename"
           , LocationInfo("151", "24", "151", "32")
           )> filename
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-to-rule-cond"
             , "r-name"
             , LocationInfo("151", "34", "151", "40")
             )> r-name
    where <s-var(
           | "gen-debug-var.str"
           , "add-var-to-rule-cond"
           , "s"
           , LocationInfo("152", "3", "152", "4")
           )> s
    where s-step(
          | "gen-debug-var.str"
          , "add-var-to-rule-cond"
          , LocationInfo("153", "9", "153", "25")
          )
          ; not(<(s-step(
                  | "gen-debug-var.str"
                  , "add-var-to-rule-cond"
                  , LocationInfo("153", "14", "153", "21")
                  )
                  ; is-list)> s)
    where (s-step(
           | "gen-debug-var.str"
           , "add-var-to-rule-cond"
           , LocationInfo("154", "9", "154", "46")
           )
           ; s' := <s-step(
                    | "gen-debug-var.str"
                    , "add-var-to-rule-cond"
                    , LocationInfo("154", "16", "154", "45")
                    )
                    ; var-wrap-s(|filename, r-name)>
           ; <s-var(
              | "gen-debug-var.str"
              , "add-var-to-rule-cond"
              , "s'"
              , LocationInfo("154", "9", "154", "11")
              )> s')
          ; s-step(
            | "gen-debug-var.str"
            , "add-var-to-rule-cond"
            , LocationInfo("155", "5", "155", "38")
            )
          ; clause-list* := [WhereClause(s')]
          ; <s-var(
             | "gen-debug-var.str"
             , "add-var-to-rule-cond"
             , "clause-list*"
             , LocationInfo("155", "5", "155", "17")
             )> clause-list*

  add-s-var-to-clause(|filename, r-name):
    WithClause(s){a} -> <r-exit(
                         | "gen-debug-var.str"
                         , "add-s-var-to-clause"
                         , LocationInfo("158", "2", "160", "47")
                         )> WithClause(s'){a}
    where r-enter(
          | "gen-debug-var.str"
          , "add-s-var-to-clause"
          , LocationInfo("158", "2", "160", "47")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "add-s-var-to-clause"
           , "filename"
           , LocationInfo("158", "23", "158", "31")
           )> filename
          ; <s-var(
             | "gen-debug-var.str"
             , "add-s-var-to-clause"
             , "r-name"
             , LocationInfo("158", "33", "158", "39")
             )> r-name
    where <s-var(
           | "gen-debug-var.str"
           , "add-s-var-to-clause"
           , "s"
           , LocationInfo("159", "14", "159", "15")
           )> s
          ; <s-var(
             | "gen-debug-var.str"
             , "add-s-var-to-clause"
             , "a"
             , LocationInfo("159", "17", "159", "18")
             )> a
    with s-step(
         | "gen-debug-var.str"
         , "add-s-var-to-clause"
         , LocationInfo("160", "8", "160", "47")
         )
         ; s' := <s-step(
                  | "gen-debug-var.str"
                  , "add-s-var-to-clause"
                  , LocationInfo("160", "15", "160", "44")
                  )
                  ; var-wrap-s(|filename, r-name)> s
         ; <s-var(
            | "gen-debug-var.str"
            , "add-s-var-to-clause"
            , "s'"
            , LocationInfo("160", "8", "160", "10")
            )> s'

  add-s-var-to-clause(|filename, r-name):
    WhereClause(s){a} -> <r-exit(
                          | "gen-debug-var.str"
                          , "add-s-var-to-clause"
                          , LocationInfo("162", "2", "164", "47")
                          )> WhereClause(s'){a}
    where r-enter(
          | "gen-debug-var.str"
          , "add-s-var-to-clause"
          , LocationInfo("162", "2", "164", "47")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "add-s-var-to-clause"
           , "filename"
           , LocationInfo("162", "23", "162", "31")
           )> filename
          ; <s-var(
             | "gen-debug-var.str"
             , "add-s-var-to-clause"
             , "r-name"
             , LocationInfo("162", "33", "162", "39")
             )> r-name
    where <s-var(
           | "gen-debug-var.str"
           , "add-s-var-to-clause"
           , "s"
           , LocationInfo("163", "15", "163", "16")
           )> s
          ; <s-var(
             | "gen-debug-var.str"
             , "add-s-var-to-clause"
             , "a"
             , LocationInfo("163", "18", "163", "19")
             )> a
    with s-step(
         | "gen-debug-var.str"
         , "add-s-var-to-clause"
         , LocationInfo("164", "8", "164", "47")
         )
         ; s' := <s-step(
                  | "gen-debug-var.str"
                  , "add-s-var-to-clause"
                  , LocationInfo("164", "15", "164", "44")
                  )
                  ; var-wrap-s(|filename, r-name)> s
         ; <s-var(
            | "gen-debug-var.str"
            , "add-s-var-to-clause"
            , "s'"
            , LocationInfo("164", "8", "164", "10")
            )> s'

  match-assign-build-s-var(|filename, name):
    d@Assign(lhs, rhs){a} -> <r-exit(
                              | "gen-debug-var.str"
                              , "match-assign-build-s-var"
                              , LocationInfo("175", "2", "179", "102")
                              )> Seq(d, s-var-calls-seq)
    where r-enter(
          | "gen-debug-var.str"
          , "match-assign-build-s-var"
          , LocationInfo("175", "2", "179", "102")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "match-assign-build-s-var"
           , "filename"
           , LocationInfo("175", "28", "175", "36")
           )> filename
          ; <s-var(
             | "gen-debug-var.str"
             , "match-assign-build-s-var"
             , "name"
             , LocationInfo("175", "38", "175", "42")
             )> name
    where <s-var(
           | "gen-debug-var.str"
           , "match-assign-build-s-var"
           , "d"
           , LocationInfo("176", "4", "176", "5")
           )> d
          ; <s-var(
             | "gen-debug-var.str"
             , "match-assign-build-s-var"
             , "lhs"
             , LocationInfo("176", "13", "176", "16")
             )> lhs
          ; <s-var(
             | "gen-debug-var.str"
             , "match-assign-build-s-var"
             , "rhs"
             , LocationInfo("176", "18", "176", "21")
             )> rhs
          ; <s-var(
             | "gen-debug-var.str"
             , "match-assign-build-s-var"
             , "a"
             , LocationInfo("176", "23", "176", "24")
             )> a
    with s-step(
         | "gen-debug-var.str"
         , "match-assign-build-s-var"
         , LocationInfo("178", "3", "178", "72")
         )
         ; s-var-calls-seq := <s-step(
                               | "gen-debug-var.str"
                               , "match-assign-build-s-var"
                               , LocationInfo("178", "23", "178", "67")
                               )
                               ; create-s-var-calls-for-Term(|filename, name)> lhs
         ; <s-var(
            | "gen-debug-var.str"
            , "match-assign-build-s-var"
            , "s-var-calls-seq"
            , LocationInfo("178", "3", "178", "18")
            )> s-var-calls-seq
         <+ (s-step(
             | "gen-debug-var.str"
             , "match-assign-build-s-var"
             , LocationInfo("179", "7", "179", "22")
             )
             ; pp-stratego-ast)
            ; s-step(
              | "gen-debug-var.str"
              , "match-assign-build-s-var"
              , LocationInfo("179", "24", "179", "101")
              )
            ; debug(
                s-step(
                | "gen-debug-var.str"
                , "match-assign-build-s-var"
                , LocationInfo("179", "30", "179", "100")
                )
                ; !" with clause failed unexpectedly in rule 'match-assign-build-s-var'"
              )

  create-s-var-call(|filename, name, var-name, a) =
    s-enter(
    | "gen-debug-var.str"
    , "create-s-var-call"
    , LocationInfo("188", "2", "192", "37")
    )
    ; (where(<s-var(
              | "gen-debug-var.str"
              , "create-s-var-call"
              , "filename"
              , LocationInfo("188", "21", "188", "29")
              )> filename
             ; <s-var(
                | "gen-debug-var.str"
                , "create-s-var-call"
                , "name"
                , LocationInfo("188", "31", "188", "35")
                )> name
             ; <s-var(
                | "gen-debug-var.str"
                , "create-s-var-call"
                , "var-name"
                , LocationInfo("188", "37", "188", "45")
                )> var-name
             ; <s-var(
                | "gen-debug-var.str"
                , "create-s-var-call"
                , "a"
                , LocationInfo("188", "47", "188", "48")
                )> a)
       ; (s-step(
          | "gen-debug-var.str"
          , "create-s-var-call"
          , LocationInfo("189", "3", "191", "4")
          )
          ; where(s-step(
                  | "gen-debug-var.str"
                  , "create-s-var-call"
                  , LocationInfo("190", "4", "190", "64")
                  )
                  ; t-args* := <s-step(
                                | "gen-debug-var.str"
                                , "create-s-var-call"
                                , LocationInfo("190", "16", "190", "63")
                                )
                                ; create-args-array(|filename, name, var-name, a)>
                  ; <s-var(
                     | "gen-debug-var.str"
                     , "create-s-var-call"
                     , "t-args*"
                     , LocationInfo("190", "4", "190", "11")
                     )> t-args*))
       ; s-step(
         | "gen-debug-var.str"
         , "create-s-var-call"
         , LocationInfo("192", "3", "192", "37")
         )
       ; !CallT(
            SVar("s-var")
          , []
          , t-args*
          )
       < s-exit(
         | "gen-debug-var.str"
         , "create-s-var-call"
         , LocationInfo("188", "2", "192", "37")
         )
       + s-exit(
         | "gen-debug-var.str"
         , "create-s-var-call"
         , LocationInfo("188", "2", "192", "37")
         )
         ; fail)

  create-args-array(|filename, name, var-name, a) =
    s-enter(
    | "gen-debug-var.str"
    , "create-args-array"
    , LocationInfo("199", "2", "200", "105")
    )
    ; (where(<s-var(
              | "gen-debug-var.str"
              , "create-args-array"
              , "filename"
              , LocationInfo("199", "21", "199", "29")
              )> filename
             ; <s-var(
                | "gen-debug-var.str"
                , "create-args-array"
                , "name"
                , LocationInfo("199", "31", "199", "35")
                )> name
             ; <s-var(
                | "gen-debug-var.str"
                , "create-args-array"
                , "var-name"
                , LocationInfo("199", "37", "199", "45")
                )> var-name
             ; <s-var(
                | "gen-debug-var.str"
                , "create-args-array"
                , "a"
                , LocationInfo("199", "47", "199", "48")
                )> a)
       ; s-step(
         | "gen-debug-var.str"
         , "create-args-array"
         , LocationInfo("200", "5", "200", "105")
         )
       ; ![ <s-step(
             | "gen-debug-var.str"
             , "create-args-array"
             , LocationInfo("200", "8", "200", "22")
             )
             ; to-string-term> filename
          , <s-step(
             | "gen-debug-var.str"
             , "create-args-array"
             , LocationInfo("200", "35", "200", "49")
             )
             ; to-string-term> name
          , <s-step(
             | "gen-debug-var.str"
             , "create-args-array"
             , LocationInfo("200", "58", "200", "72")
             )
             ; to-string-term> var-name
          , <s-step(
             | "gen-debug-var.str"
             , "create-args-array"
             , LocationInfo("200", "85", "200", "101")
             )
             ; location-to-term> a
          ]
       < s-exit(
         | "gen-debug-var.str"
         , "create-args-array"
         , LocationInfo("199", "2", "200", "105")
         )
       + s-exit(
         | "gen-debug-var.str"
         , "create-args-array"
         , LocationInfo("199", "2", "200", "105")
         )
         ; fail)

  get-var-name :
    Var(name) -> <r-exit(
                  | "gen-debug-var.str"
                  , "get-var-name"
                  , LocationInfo("203", "2", "205", "34")
                  )> name
    where r-enter(
          | "gen-debug-var.str"
          , "get-var-name"
          , LocationInfo("203", "2", "205", "34")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "get-var-name"
           , "name"
           , LocationInfo("204", "9", "204", "13")
           )> name
    where s-step(
          | "gen-debug-var.str"
          , "get-var-name"
          , LocationInfo("205", "11", "205", "34")
          )
          ; not(s-step(
                | "gen-debug-var.str"
                , "get-var-name"
                , LocationInfo("205", "16", "205", "33")
                )
                ; ?Var(ListVar(lv)))

  get-var-name :
    Var(ListVar(name)) -> <r-exit(
                           | "gen-debug-var.str"
                           , "get-var-name"
                           , LocationInfo("207", "2", "208", "31")
                           )> name
    where r-enter(
          | "gen-debug-var.str"
          , "get-var-name"
          , LocationInfo("207", "2", "208", "31")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "get-var-name"
           , "name"
           , LocationInfo("208", "17", "208", "21")
           )> name

  to-string-term :
    value -> <r-exit(
              | "gen-debug-var.str"
              , "to-string-term"
              , LocationInfo("213", "2", "214", "37")
              )> NoAnnoList(Str(value))
    where r-enter(
          | "gen-debug-var.str"
          , "to-string-term"
          , LocationInfo("213", "2", "214", "37")
          )
    where <s-var(
           | "gen-debug-var.str"
           , "to-string-term"
           , "value"
           , LocationInfo("214", "5", "214", "10")
           )> value