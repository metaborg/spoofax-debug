module gen-debug-step

imports
  strategodebuglib


imports
  libstratego-lib
  include/Test
  assert
  location-util


rules

  add-step-statements(|filename) =
    s-enter(
    | "gen-debug-step.str"
    , "add-step-statements"
    , LocationInfo("29", "2", "31", "48")
    )
    ; (where(<s-var(
              | "gen-debug-step.str"
              , "add-step-statements"
              , "filename"
              , LocationInfo("29", "23", "29", "31")
              )> filename)
       ; (s-step(
          | "gen-debug-step.str"
          , "add-step-statements"
          , LocationInfo("30", "3", "30", "46")
          )
          ; bottomup(
              s-step(
              | "gen-debug-step.str"
              , "add-step-statements"
              , LocationInfo("30", "12", "30", "45")
              )
              ; try(
                  s-step(
                  | "gen-debug-step.str"
                  , "add-step-statements"
                  , LocationInfo("30", "16", "30", "44")
                  )
                  ; add-step-in-r-def(|filename)
                )
            ))
       ; s-step(
         | "gen-debug-step.str"
         , "add-step-statements"
         , LocationInfo("31", "5", "31", "48")
         )
       ; bottomup(
           s-step(
           | "gen-debug-step.str"
           , "add-step-statements"
           , LocationInfo("31", "14", "31", "47")
           )
           ; try(
               s-step(
               | "gen-debug-step.str"
               , "add-step-statements"
               , LocationInfo("31", "18", "31", "46")
               )
               ; add-step-in-s-def(|filename)
             )
         )
       < s-exit(
         | "gen-debug-step.str"
         , "add-step-statements"
         , LocationInfo("29", "2", "31", "48")
         )
       + s-exit(
         | "gen-debug-step.str"
         , "add-step-statements"
         , LocationInfo("29", "2", "31", "48")
         )
         ; fail)

  add-step-in-r-def(|filename):
    RDefNoArgs(r-name, r){a} -> <r-exit(
                                 | "gen-debug-step.str"
                                 , "add-step-in-r-def"
                                 , LocationInfo("34", "2", "36", "72")
                                 )> RDefNoArgs(r-name, r'){a}
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-in-r-def"
          , LocationInfo("34", "2", "36", "72")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-in-r-def"
           , "filename"
           , LocationInfo("34", "21", "34", "29")
           )> filename
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-in-r-def"
           , "r-name"
           , LocationInfo("35", "14", "35", "20")
           )> r-name
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-r-def"
             , "r"
             , LocationInfo("35", "22", "35", "23")
             )> r
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-r-def"
             , "a"
             , LocationInfo("35", "25", "35", "26")
             )> a
    with s-step(
         | "gen-debug-step.str"
         , "add-step-in-r-def"
         , LocationInfo("36", "8", "36", "72")
         )
         ; r' := <s-step(
                  | "gen-debug-step.str"
                  , "add-step-in-r-def"
                  , LocationInfo("36", "15", "36", "69")
                  )
                  ; bottomup(
                      s-step(
                      | "gen-debug-step.str"
                      , "add-step-in-r-def"
                      , LocationInfo("36", "24", "36", "68")
                      )
                      ; try(
                          s-step(
                          | "gen-debug-step.str"
                          , "add-step-in-r-def"
                          , LocationInfo("36", "28", "36", "67")
                          )
                          ; add-step-to-strategy(|filename, r-name)
                        )
                    )> r
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-in-r-def"
            , "r'"
            , LocationInfo("36", "8", "36", "10")
            )> r'

  add-step-in-r-def(|filename):
    RDef(r-name, s-args, r){a} -> <r-exit(
                                   | "gen-debug-step.str"
                                   , "add-step-in-r-def"
                                   , LocationInfo("38", "2", "40", "72")
                                   )> RDef(r-name, s-args, r'){a}
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-in-r-def"
          , LocationInfo("38", "2", "40", "72")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-in-r-def"
           , "filename"
           , LocationInfo("38", "21", "38", "29")
           )> filename
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-in-r-def"
           , "r-name"
           , LocationInfo("39", "8", "39", "14")
           )> r-name
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-r-def"
             , "s-args"
             , LocationInfo("39", "16", "39", "22")
             )> s-args
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-r-def"
             , "r"
             , LocationInfo("39", "24", "39", "25")
             )> r
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-r-def"
             , "a"
             , LocationInfo("39", "27", "39", "28")
             )> a
    with s-step(
         | "gen-debug-step.str"
         , "add-step-in-r-def"
         , LocationInfo("40", "8", "40", "72")
         )
         ; r' := <s-step(
                  | "gen-debug-step.str"
                  , "add-step-in-r-def"
                  , LocationInfo("40", "15", "40", "69")
                  )
                  ; bottomup(
                      s-step(
                      | "gen-debug-step.str"
                      , "add-step-in-r-def"
                      , LocationInfo("40", "24", "40", "68")
                      )
                      ; try(
                          s-step(
                          | "gen-debug-step.str"
                          , "add-step-in-r-def"
                          , LocationInfo("40", "28", "40", "67")
                          )
                          ; add-step-to-strategy(|filename, r-name)
                        )
                    )> r
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-in-r-def"
            , "r'"
            , LocationInfo("40", "8", "40", "10")
            )> r'

  add-step-in-r-def(|filename):
    RDefT(r-name, s-args, t-args, r){a} -> <r-exit(
                                            | "gen-debug-step.str"
                                            , "add-step-in-r-def"
                                            , LocationInfo("41", "2", "43", "72")
                                            )> RDefT(r-name, s-args, t-args, r'){a}
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-in-r-def"
          , LocationInfo("41", "2", "43", "72")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-in-r-def"
           , "filename"
           , LocationInfo("41", "21", "41", "29")
           )> filename
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-in-r-def"
           , "r-name"
           , LocationInfo("42", "9", "42", "15")
           )> r-name
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-r-def"
             , "s-args"
             , LocationInfo("42", "17", "42", "23")
             )> s-args
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-r-def"
             , "t-args"
             , LocationInfo("42", "25", "42", "31")
             )> t-args
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-r-def"
             , "r"
             , LocationInfo("42", "33", "42", "34")
             )> r
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-r-def"
             , "a"
             , LocationInfo("42", "36", "42", "37")
             )> a
    with s-step(
         | "gen-debug-step.str"
         , "add-step-in-r-def"
         , LocationInfo("43", "8", "43", "72")
         )
         ; r' := <s-step(
                  | "gen-debug-step.str"
                  , "add-step-in-r-def"
                  , LocationInfo("43", "15", "43", "69")
                  )
                  ; bottomup(
                      s-step(
                      | "gen-debug-step.str"
                      , "add-step-in-r-def"
                      , LocationInfo("43", "24", "43", "68")
                      )
                      ; try(
                          s-step(
                          | "gen-debug-step.str"
                          , "add-step-in-r-def"
                          , LocationInfo("43", "28", "43", "67")
                          )
                          ; add-step-to-strategy(|filename, r-name)
                        )
                    )> r
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-in-r-def"
            , "r'"
            , LocationInfo("43", "8", "43", "10")
            )> r'

  add-step-in-s-def(|filename):
    SDefNoArgs(s-name, s){a} -> <r-exit(
                                 | "gen-debug-step.str"
                                 , "add-step-in-s-def"
                                 , LocationInfo("46", "2", "48", "72")
                                 )> SDefNoArgs(s-name, s'){a}
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-in-s-def"
          , LocationInfo("46", "2", "48", "72")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-in-s-def"
           , "filename"
           , LocationInfo("46", "21", "46", "29")
           )> filename
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-in-s-def"
           , "s-name"
           , LocationInfo("47", "14", "47", "20")
           )> s-name
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-s-def"
             , "s"
             , LocationInfo("47", "22", "47", "23")
             )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-s-def"
             , "a"
             , LocationInfo("47", "25", "47", "26")
             )> a
    with s-step(
         | "gen-debug-step.str"
         , "add-step-in-s-def"
         , LocationInfo("48", "8", "48", "72")
         )
         ; s' := <s-step(
                  | "gen-debug-step.str"
                  , "add-step-in-s-def"
                  , LocationInfo("48", "15", "48", "69")
                  )
                  ; bottomup(
                      s-step(
                      | "gen-debug-step.str"
                      , "add-step-in-s-def"
                      , LocationInfo("48", "24", "48", "68")
                      )
                      ; try(
                          s-step(
                          | "gen-debug-step.str"
                          , "add-step-in-s-def"
                          , LocationInfo("48", "28", "48", "67")
                          )
                          ; add-step-to-strategy(|filename, s-name)
                        )
                    )> s
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-in-s-def"
            , "s'"
            , LocationInfo("48", "8", "48", "10")
            )> s'

  add-step-in-s-def(|filename):
    SDef(s-name, s-args, s){a} -> <r-exit(
                                   | "gen-debug-step.str"
                                   , "add-step-in-s-def"
                                   , LocationInfo("49", "2", "51", "72")
                                   )> SDef(s-name, s-args, s'){a}
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-in-s-def"
          , LocationInfo("49", "2", "51", "72")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-in-s-def"
           , "filename"
           , LocationInfo("49", "21", "49", "29")
           )> filename
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-in-s-def"
           , "s-name"
           , LocationInfo("50", "8", "50", "14")
           )> s-name
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-s-def"
             , "s-args"
             , LocationInfo("50", "16", "50", "22")
             )> s-args
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-s-def"
             , "s"
             , LocationInfo("50", "24", "50", "25")
             )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-s-def"
             , "a"
             , LocationInfo("50", "27", "50", "28")
             )> a
    with s-step(
         | "gen-debug-step.str"
         , "add-step-in-s-def"
         , LocationInfo("51", "8", "51", "72")
         )
         ; s' := <s-step(
                  | "gen-debug-step.str"
                  , "add-step-in-s-def"
                  , LocationInfo("51", "15", "51", "69")
                  )
                  ; bottomup(
                      s-step(
                      | "gen-debug-step.str"
                      , "add-step-in-s-def"
                      , LocationInfo("51", "24", "51", "68")
                      )
                      ; try(
                          s-step(
                          | "gen-debug-step.str"
                          , "add-step-in-s-def"
                          , LocationInfo("51", "28", "51", "67")
                          )
                          ; add-step-to-strategy(|filename, s-name)
                        )
                    )> s
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-in-s-def"
            , "s'"
            , LocationInfo("51", "8", "51", "10")
            )> s'

  add-step-in-s-def(|filename):
    SDefT(s-name, s-args, t-args, s){a} -> <r-exit(
                                            | "gen-debug-step.str"
                                            , "add-step-in-s-def"
                                            , LocationInfo("52", "2", "54", "72")
                                            )> SDefT(s-name, s-args, t-args, s'){a}
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-in-s-def"
          , LocationInfo("52", "2", "54", "72")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-in-s-def"
           , "filename"
           , LocationInfo("52", "21", "52", "29")
           )> filename
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-in-s-def"
           , "s-name"
           , LocationInfo("53", "9", "53", "15")
           )> s-name
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-s-def"
             , "s-args"
             , LocationInfo("53", "17", "53", "23")
             )> s-args
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-s-def"
             , "t-args"
             , LocationInfo("53", "25", "53", "31")
             )> t-args
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-s-def"
             , "s"
             , LocationInfo("53", "33", "53", "34")
             )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-in-s-def"
             , "a"
             , LocationInfo("53", "36", "53", "37")
             )> a
    with s-step(
         | "gen-debug-step.str"
         , "add-step-in-s-def"
         , LocationInfo("54", "8", "54", "72")
         )
         ; s' := <s-step(
                  | "gen-debug-step.str"
                  , "add-step-in-s-def"
                  , LocationInfo("54", "15", "54", "69")
                  )
                  ; bottomup(
                      s-step(
                      | "gen-debug-step.str"
                      , "add-step-in-s-def"
                      , LocationInfo("54", "24", "54", "68")
                      )
                      ; try(
                          s-step(
                          | "gen-debug-step.str"
                          , "add-step-in-s-def"
                          , LocationInfo("54", "28", "54", "67")
                          )
                          ; add-step-to-strategy(|filename, s-name)
                        )
                    )> s
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-in-s-def"
            , "s'"
            , LocationInfo("54", "8", "54", "10")
            )> s'

  add-step-to-strategy(|filename, name):
    s@GenDynRules(_){a1} -> <r-exit(
                             | "gen-debug-step.str"
                             , "add-step-to-strategy"
                             , LocationInfo("292", "2", "296", "26")
                             )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("292", "2", "296", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("292", "24", "292", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("292", "34", "292", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("293", "3", "293", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("293", "20", "293", "22")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("295", "4", "295", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("295", "15", "295", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("295", "4", "295", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("296", "6", "296", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("296", "6", "296", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@Call(_, _){a1} -> <r-exit(
                         | "gen-debug-step.str"
                         , "add-step-to-strategy"
                         , LocationInfo("299", "2", "303", "26")
                         )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("299", "2", "303", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("299", "24", "299", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("299", "34", "299", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("300", "3", "300", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("300", "16", "300", "18")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("302", "4", "302", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("302", "15", "302", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("302", "4", "302", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("303", "6", "303", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("303", "6", "303", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@ScopeDefault(_){a1} -> <r-exit(
                              | "gen-debug-step.str"
                              , "add-step-to-strategy"
                              , LocationInfo("306", "2", "310", "26")
                              )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("306", "2", "310", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("306", "24", "306", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("306", "34", "306", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("307", "3", "307", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("307", "21", "307", "23")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("309", "4", "309", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("309", "15", "309", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("309", "4", "309", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("310", "6", "310", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("310", "6", "310", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@Rec(_, _){a1} -> <r-exit(
                        | "gen-debug-step.str"
                        , "add-step-to-strategy"
                        , LocationInfo("313", "2", "317", "26")
                        )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("313", "2", "317", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("313", "24", "313", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("313", "34", "313", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("314", "3", "314", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("314", "14", "314", "16")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("316", "4", "316", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("316", "15", "316", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("316", "4", "316", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("317", "6", "317", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("317", "6", "317", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@Not(_){a1} -> <r-exit(
                     | "gen-debug-step.str"
                     , "add-step-to-strategy"
                     , LocationInfo("320", "2", "324", "26")
                     )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("320", "2", "324", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("320", "24", "320", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("320", "34", "320", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("321", "3", "321", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("321", "12", "321", "14")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("323", "4", "323", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("323", "15", "323", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("323", "4", "323", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("324", "6", "324", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("324", "6", "324", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@Where(_){a1} -> <r-exit(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("327", "2", "331", "26")
                       )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("327", "2", "331", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("327", "24", "327", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("327", "34", "327", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("328", "3", "328", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("328", "14", "328", "16")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("330", "4", "330", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("330", "15", "330", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("330", "4", "330", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("331", "6", "331", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("331", "6", "331", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@With(_){a1} -> <r-exit(
                      | "gen-debug-step.str"
                      , "add-step-to-strategy"
                      , LocationInfo("334", "2", "338", "26")
                      )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("334", "2", "338", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("334", "24", "334", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("334", "34", "334", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("335", "3", "335", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("335", "13", "335", "15")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("337", "4", "337", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("337", "15", "337", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("337", "4", "337", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("338", "6", "338", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("338", "6", "338", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@Test(_){a1} -> <r-exit(
                      | "gen-debug-step.str"
                      , "add-step-to-strategy"
                      , LocationInfo("341", "2", "345", "26")
                      )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("341", "2", "345", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("341", "24", "341", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("341", "34", "341", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("342", "3", "342", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("342", "13", "342", "15")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("344", "4", "344", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("344", "15", "344", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("344", "4", "344", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("345", "6", "345", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("345", "6", "345", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@PrimNoArgs(_){a1} -> <r-exit(
                            | "gen-debug-step.str"
                            , "add-step-to-strategy"
                            , LocationInfo("348", "2", "352", "26")
                            )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("348", "2", "352", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("348", "24", "348", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("348", "34", "348", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("349", "3", "349", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("349", "19", "349", "21")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("351", "4", "351", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("351", "15", "351", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("351", "4", "351", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("352", "6", "352", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("352", "6", "352", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@Prim(_, _){a1} -> <r-exit(
                         | "gen-debug-step.str"
                         , "add-step-to-strategy"
                         , LocationInfo("355", "2", "359", "26")
                         )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("355", "2", "359", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("355", "24", "355", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("355", "34", "355", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("356", "3", "356", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("356", "16", "356", "18")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("358", "4", "358", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("358", "15", "358", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("358", "4", "358", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("359", "6", "359", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("359", "6", "359", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@CallNoArgs(_){a1} -> <r-exit(
                            | "gen-debug-step.str"
                            , "add-step-to-strategy"
                            , LocationInfo("362", "2", "366", "26")
                            )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("362", "2", "366", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("362", "24", "362", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("362", "34", "362", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("363", "3", "363", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("363", "19", "363", "21")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("365", "4", "365", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("365", "15", "365", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("365", "4", "365", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("366", "6", "366", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("366", "6", "366", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@LRule(_){a1} -> <r-exit(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("369", "2", "373", "26")
                       )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("369", "2", "373", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("369", "24", "369", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("369", "34", "369", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("370", "3", "370", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("370", "14", "370", "16")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("372", "4", "372", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("372", "15", "372", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("372", "4", "372", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("373", "6", "373", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("373", "6", "373", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@SRule(_){a1} -> <r-exit(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("376", "2", "380", "26")
                       )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("376", "2", "380", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("376", "24", "376", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("376", "34", "376", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("377", "3", "377", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("377", "14", "377", "16")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("379", "4", "379", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("379", "15", "379", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("379", "4", "379", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("380", "6", "380", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("380", "6", "380", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@ProceedNoArgs(){a1} -> <r-exit(
                              | "gen-debug-step.str"
                              , "add-step-to-strategy"
                              , LocationInfo("383", "2", "387", "26")
                              )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("383", "2", "387", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("383", "24", "383", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("383", "34", "383", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("384", "3", "384", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("384", "21", "384", "23")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("386", "4", "386", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("386", "15", "386", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("386", "4", "386", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("387", "6", "387", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("387", "6", "387", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@Proceed(_){a1} -> <r-exit(
                         | "gen-debug-step.str"
                         , "add-step-to-strategy"
                         , LocationInfo("390", "2", "394", "26")
                         )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("390", "2", "394", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("390", "24", "390", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("390", "34", "390", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("391", "3", "391", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("391", "16", "391", "18")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("393", "4", "393", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("393", "15", "393", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("393", "4", "393", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("394", "6", "394", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("394", "6", "394", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@AM(_, _){a1} -> <r-exit(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("397", "2", "401", "26")
                       )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("397", "2", "401", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("397", "24", "397", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("397", "34", "397", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("398", "3", "398", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("398", "13", "398", "15")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("400", "4", "400", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("400", "15", "400", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("400", "4", "400", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("401", "6", "401", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("401", "6", "401", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@Assign(_, _){a1} -> <r-exit(
                           | "gen-debug-step.str"
                           , "add-step-to-strategy"
                           , LocationInfo("404", "2", "408", "26")
                           )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("404", "2", "408", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("404", "24", "404", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("404", "34", "404", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("405", "3", "405", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("405", "17", "405", "19")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("407", "4", "407", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("407", "15", "407", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("407", "4", "407", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("408", "6", "408", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("408", "6", "408", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@Let(_, _){a1} -> <r-exit(
                        | "gen-debug-step.str"
                        , "add-step-to-strategy"
                        , LocationInfo("411", "2", "415", "26")
                        )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("411", "2", "415", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("411", "24", "411", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("411", "34", "411", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("412", "3", "412", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("412", "14", "412", "16")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("414", "4", "414", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("414", "15", "414", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("414", "4", "414", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("415", "6", "415", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("415", "6", "415", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@CallT(_, _, _){a1} -> <r-exit(
                             | "gen-debug-step.str"
                             , "add-step-to-strategy"
                             , LocationInfo("418", "2", "422", "26")
                             )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("418", "2", "422", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("418", "24", "418", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("418", "34", "418", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("419", "3", "419", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("419", "19", "419", "21")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("421", "4", "421", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("421", "15", "421", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("421", "4", "421", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("422", "6", "422", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("422", "6", "422", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@CallDynamic(_, _, _){a1} -> <r-exit(
                                   | "gen-debug-step.str"
                                   , "add-step-to-strategy"
                                   , LocationInfo("425", "2", "429", "26")
                                   )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("425", "2", "429", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("425", "24", "425", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("425", "34", "425", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("426", "3", "426", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("426", "25", "426", "27")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("428", "4", "428", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("428", "15", "428", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("428", "4", "428", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("429", "6", "429", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("429", "6", "429", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@Fail(){a1} -> <r-exit(
                     | "gen-debug-step.str"
                     , "add-step-to-strategy"
                     , LocationInfo("432", "2", "436", "26")
                     )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("432", "2", "436", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("432", "24", "432", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("432", "34", "432", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("433", "3", "433", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("433", "12", "433", "14")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("435", "4", "435", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("435", "15", "435", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("435", "4", "435", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("436", "6", "436", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("436", "6", "436", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@Id(){a1} -> <r-exit(
                   | "gen-debug-step.str"
                   , "add-step-to-strategy"
                   , LocationInfo("439", "2", "443", "26")
                   )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("439", "2", "443", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("439", "24", "439", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("439", "34", "439", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("440", "3", "440", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("440", "10", "440", "12")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("442", "4", "442", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("442", "15", "442", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("442", "4", "442", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("443", "6", "443", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("443", "6", "443", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@ProceedT(_, _){a1} -> <r-exit(
                             | "gen-debug-step.str"
                             , "add-step-to-strategy"
                             , LocationInfo("446", "2", "450", "26")
                             )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("446", "2", "450", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("446", "24", "446", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("446", "34", "446", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("447", "3", "447", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("447", "19", "447", "21")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("449", "4", "449", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("449", "15", "449", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("449", "4", "449", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("450", "6", "450", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("450", "6", "450", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@ProceedNoArgs(){a1} -> <r-exit(
                              | "gen-debug-step.str"
                              , "add-step-to-strategy"
                              , LocationInfo("453", "2", "457", "26")
                              )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("453", "2", "457", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("453", "24", "453", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("453", "34", "453", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("454", "3", "454", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("454", "21", "454", "23")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("456", "4", "456", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("456", "15", "456", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("456", "4", "456", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("457", "6", "457", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("457", "6", "457", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@Match(_){a1} -> <r-exit(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("460", "2", "464", "26")
                       )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("460", "2", "464", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("460", "24", "460", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("460", "34", "460", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("461", "3", "461", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("461", "14", "461", "16")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("463", "4", "463", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("463", "15", "463", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("463", "4", "463", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("464", "6", "464", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("464", "6", "464", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@Build(_){a1} -> <r-exit(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("467", "2", "471", "26")
                       )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("467", "2", "471", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("467", "24", "467", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("467", "34", "467", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("468", "3", "468", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("468", "14", "468", "16")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("470", "4", "470", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("470", "15", "470", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("470", "4", "470", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("471", "6", "471", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("471", "6", "471", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@Scope(_, _){a1} -> <r-exit(
                          | "gen-debug-step.str"
                          , "add-step-to-strategy"
                          , LocationInfo("474", "2", "478", "26")
                          )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("474", "2", "478", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("474", "24", "474", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("474", "34", "474", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("475", "3", "475", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("475", "17", "475", "19")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("477", "4", "477", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("477", "15", "477", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("477", "4", "477", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("478", "6", "478", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("478", "6", "478", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@PrimT(_, _, _){a1} -> <r-exit(
                             | "gen-debug-step.str"
                             , "add-step-to-strategy"
                             , LocationInfo("481", "2", "485", "26")
                             )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("481", "2", "485", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("481", "24", "481", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("481", "34", "481", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("482", "3", "482", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("482", "20", "482", "22")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("484", "4", "484", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("484", "15", "484", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("484", "4", "484", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("485", "6", "485", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("485", "6", "485", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@Some(_){a1} -> <r-exit(
                      | "gen-debug-step.str"
                      , "add-step-to-strategy"
                      , LocationInfo("488", "2", "492", "26")
                      )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("488", "2", "492", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("488", "24", "488", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("488", "34", "488", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("489", "3", "489", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("489", "13", "489", "15")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("491", "4", "491", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("491", "15", "491", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("491", "4", "491", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("492", "6", "492", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("492", "6", "492", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@One(_){a1} -> <r-exit(
                     | "gen-debug-step.str"
                     , "add-step-to-strategy"
                     , LocationInfo("495", "2", "499", "26")
                     )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("495", "2", "499", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("495", "24", "495", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("495", "34", "495", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("496", "3", "496", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("496", "12", "496", "14")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("498", "4", "498", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("498", "15", "498", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("498", "4", "498", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("499", "6", "499", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("499", "6", "499", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@All(_){a1} -> <r-exit(
                     | "gen-debug-step.str"
                     , "add-step-to-strategy"
                     , LocationInfo("502", "2", "506", "26")
                     )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("502", "2", "506", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("502", "24", "502", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("502", "34", "502", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("503", "3", "503", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("503", "12", "503", "14")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("505", "4", "505", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("505", "15", "505", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("505", "4", "505", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("506", "6", "506", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("506", "6", "506", "8")
            )> s'

  add-step-to-strategy(|filename, name):
    s@ImportTerm(_){a1} -> <r-exit(
                            | "gen-debug-step.str"
                            , "add-step-to-strategy"
                            , LocationInfo("509", "2", "513", "26")
                            )> s'
    where r-enter(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("509", "2", "513", "26")
          )
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "filename"
           , LocationInfo("509", "24", "509", "32")
           )> filename
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "name"
             , LocationInfo("509", "34", "509", "38")
             )> name
    where <s-var(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , "s"
           , LocationInfo("510", "3", "510", "4")
           )> s
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "a1"
             , LocationInfo("510", "19", "510", "21")
             )> a1
    with (s-step(
          | "gen-debug-step.str"
          , "add-step-to-strategy"
          , LocationInfo("512", "4", "512", "53")
          )
          ; s-step := <s-step(
                       | "gen-debug-step.str"
                       , "add-step-to-strategy"
                       , LocationInfo("512", "15", "512", "52")
                       )
                       ; create-step-call(|filename, name, a1)>
          ; <s-var(
             | "gen-debug-step.str"
             , "add-step-to-strategy"
             , "s-step"
             , LocationInfo("512", "4", "512", "10")
             )> s-step)
         ; s-step(
           | "gen-debug-step.str"
           , "add-step-to-strategy"
           , LocationInfo("513", "6", "513", "26")
           )
         ; s' := Seq(s-step, s)
         ; <s-var(
            | "gen-debug-step.str"
            , "add-step-to-strategy"
            , "s'"
            , LocationInfo("513", "6", "513", "8")
            )> s'


strategies
  create-step-call(|filename, name, a) =
    s-enter(
    | "gen-debug-step.str"
    , "create-step-call"
    , LocationInfo("524", "2", "524", "141")
    )
    ; (where(<s-var(
              | "gen-debug-step.str"
              , "create-step-call"
              , "filename"
              , LocationInfo("524", "20", "524", "28")
              )> filename
             ; <s-var(
                | "gen-debug-step.str"
                , "create-step-call"
                , "name"
                , LocationInfo("524", "30", "524", "34")
                )> name
             ; <s-var(
                | "gen-debug-step.str"
                , "create-step-call"
                , "a"
                , LocationInfo("524", "36", "524", "37")
                )> a)
       ; s-step(
         | "gen-debug-step.str"
         , "create-step-call"
         , LocationInfo("524", "41", "524", "141")
         )
       ; !CallT(
            SVar("s-step")
          , []
          , [ NoAnnoList(Str(filename))
            , NoAnnoList(Str(name))
            , <s-step(
               | "gen-debug-step.str"
               , "create-step-call"
               , LocationInfo("524", "120", "524", "136")
               )
               ; location-to-term> a
            ]
          )
       < s-exit(
         | "gen-debug-step.str"
         , "create-step-call"
         , LocationInfo("524", "2", "524", "141")
         )
       + s-exit(
         | "gen-debug-step.str"
         , "create-step-call"
         , LocationInfo("524", "2", "524", "141")
         )
         ; fail)