module trans-str

imports
  strategodebuglib


imports
  str-reader
  libstratego-lib
  gen-debug-info
  assert
  gen-lookup
  traverse-imports
  transformer-test-suite


rules

  generate-str :
    (selected, position, ast, path, project-path) -> <r-exit(
                                                      | "trans-str.str"
                                                      , "generate-str"
                                                      , LocationInfo("14", "2", "26", "8")
                                                      )> (show-output-filename, result)
    where r-enter(
          | "trans-str.str"
          , "generate-str"
          , LocationInfo("14", "2", "26", "8")
          )
    where <s-var(
           | "trans-str.str"
           , "generate-str"
           , "selected"
           , LocationInfo("15", "7", "15", "15")
           )> selected
          ; <s-var(
             | "trans-str.str"
             , "generate-str"
             , "position"
             , LocationInfo("15", "17", "15", "25")
             )> position
          ; <s-var(
             | "trans-str.str"
             , "generate-str"
             , "ast"
             , LocationInfo("15", "27", "15", "30")
             )> ast
          ; <s-var(
             | "trans-str.str"
             , "generate-str"
             , "path"
             , LocationInfo("15", "32", "15", "36")
             )> path
          ; <s-var(
             | "trans-str.str"
             , "generate-str"
             , "project-path"
             , LocationInfo("15", "38", "15", "50")
             )> project-path
    where (s-step(
           | "trans-str.str"
           , "generate-str"
           , LocationInfo("17", "7", "17", "66")
           )
           ; complete-path := <s-step(
                               | "trans-str.str"
                               , "generate-str"
                               , LocationInfo("17", "25", "17", "39")
                               )
                               ; concat-strings> [project-path, "/", path]
           ; <s-var(
              | "trans-str.str"
              , "generate-str"
              , "complete-path"
              , LocationInfo("17", "7", "17", "20")
              )> complete-path)
          ; (s-step(
             | "trans-str.str"
             , "generate-str"
             , LocationInfo("19", "11", "19", "70")
             )
             ; show-output-filename := <s-step(
                                        | "trans-str.str"
                                        , "generate-str"
                                        , LocationInfo("19", "36", "19", "64")
                                        )
                                        ; guarantee-extension(|"show")> path
             ; <s-var(
                | "trans-str.str"
                , "generate-str"
                , "show-output-filename"
                , LocationInfo("19", "11", "19", "31")
                )> show-output-filename)
          ; (s-step(
             | "trans-str.str"
             , "generate-str"
             , LocationInfo("20", "11", "20", "73")
             )
             ; output-filename := <s-step(
                                   | "trans-str.str"
                                   , "generate-str"
                                   , LocationInfo("20", "31", "20", "58")
                                   )
                                   ; guarantee-extension(|"out")> complete-path
             ; <s-var(
                | "trans-str.str"
                , "generate-str"
                , "output-filename"
                , LocationInfo("20", "11", "20", "26")
                )> output-filename)
          ; (s-step(
             | "trans-str.str"
             , "generate-str"
             , LocationInfo("21", "12", "21", "74")
             )
             ; r := <s-step(
                     | "trans-str.str"
                     , "generate-str"
                     , LocationInfo("21", "18", "21", "35")
                     )
                     ; apply-debug-trans> (project-path, path, output-filename)
             ; <s-var(
                | "trans-str.str"
                , "generate-str"
                , "r"
                , LocationInfo("21", "12", "21", "13")
                )> r)
          ; s-step(
            | "trans-str.str"
            , "generate-str"
            , LocationInfo("23", "12", "23", "49")
            )
          ; result := ("see", output-filename, r)
          ; <s-var(
             | "trans-str.str"
             , "generate-str"
             , "result"
             , LocationInfo("23", "12", "23", "18")
             )> result


strategies
  get-project-dir =
    s-enter(
    | "trans-str.str"
    , "get-project-dir"
    , LocationInfo("35", "2", "35", "127")
    )
    ; (s-step(
       | "trans-str.str"
       , "get-project-dir"
       , LocationInfo("35", "20", "35", "127")
       )
       ; !"/home/rlindeman/Documents/TU/strategoxt/spoofax-imp/source/org.strategoxt.imp.debug.stratego.transformer"
       < s-exit(
         | "trans-str.str"
         , "get-project-dir"
         , LocationInfo("35", "2", "35", "127")
         )
       + s-exit(
         | "trans-str.str"
         , "get-project-dir"
         , LocationInfo("35", "2", "35", "127")
         )
         ; fail)


rules

  apply-debug-trans =
    s-enter(
    | "trans-str.str"
    , "apply-debug-trans"
    , LocationInfo("44", "3", "44", "76")
    )
    ; ((s-step(
        | "trans-str.str"
        , "apply-debug-trans"
        , LocationInfo("44", "23", "44", "49")
        )
        ; apply-debug-trans-internal
        <+ s-step(
           | "trans-str.str"
           , "apply-debug-trans"
           , LocationInfo("44", "53", "44", "76")
           )
           ; apply-debug-trans-error)
       < s-exit(
         | "trans-str.str"
         , "apply-debug-trans"
         , LocationInfo("44", "3", "44", "76")
         )
       + s-exit(
         | "trans-str.str"
         , "apply-debug-trans"
         , LocationInfo("44", "3", "44", "76")
         )
         ; fail)

  apply-debug-trans-internal :
    (sourceBasedir, inputfilePath, outputfilename) -> <r-exit(
                                                       | "trans-str.str"
                                                       , "apply-debug-trans-internal"
                                                       , LocationInfo("50", "3", "65", "5")
                                                       )> (status, outputfilename, absPath)
    where r-enter(
          | "trans-str.str"
          , "apply-debug-trans-internal"
          , LocationInfo("50", "3", "65", "5")
          )
    where <s-var(
           | "trans-str.str"
           , "apply-debug-trans-internal"
           , "sourceBasedir"
           , LocationInfo("51", "5", "51", "18")
           )> sourceBasedir
          ; <s-var(
             | "trans-str.str"
             , "apply-debug-trans-internal"
             , "inputfilePath"
             , LocationInfo("51", "20", "51", "33")
             )> inputfilePath
          ; <s-var(
             | "trans-str.str"
             , "apply-debug-trans-internal"
             , "outputfilename"
             , LocationInfo("51", "35", "51", "49")
             )> outputfilename
    where (s-step(
           | "trans-str.str"
           , "apply-debug-trans-internal"
           , LocationInfo("53", "4", "53", "68")
           )
           ; absPath := <s-step(
                         | "trans-str.str"
                         , "apply-debug-trans-internal"
                         , LocationInfo("53", "17", "53", "31")
                         )
                         ; concat-strings> [sourceBasedir, "/", inputfilePath]
           ; <s-var(
              | "trans-str.str"
              , "apply-debug-trans-internal"
              , "absPath"
              , LocationInfo("53", "4", "53", "11")
              )> absPath)
          ; (s-step(
             | "trans-str.str"
             , "apply-debug-trans-internal"
             , LocationInfo("54", "6", "54", "45")
             )
             ; parse-stratego-with-locations(|absPath))
          ; (s-step(
             | "trans-str.str"
             , "apply-debug-trans-internal"
             , LocationInfo("56", "6", "56", "19")
             )
             ; assert-module)
          ; (s-step(
             | "trans-str.str"
             , "apply-debug-trans-internal"
             , LocationInfo("58", "6", "58", "21")
             )
             ; filter-location)
          ; (s-step(
             | "trans-str.str"
             , "apply-debug-trans-internal"
             , LocationInfo("60", "6", "60", "36")
             )
             ; add-debug-info(|inputfilePath))
          ; (s-step(
             | "trans-str.str"
             , "apply-debug-trans-internal"
             , LocationInfo("62", "6", "62", "37")
             )
             ; write-stratego(|outputfilename))
          ; s-step(
            | "trans-str.str"
            , "apply-debug-trans-internal"
            , LocationInfo("64", "6", "64", "24")
            )
          ; status := "SUCCES"
          ; <s-var(
             | "trans-str.str"
             , "apply-debug-trans-internal"
             , "status"
             , LocationInfo("64", "6", "64", "12")
             )> status

  apply-debug-trans-debug :
    input -> <r-exit(
              | "trans-str.str"
              , "apply-debug-trans-debug"
              , LocationInfo("68", "3", "71", "24")
              )> output
    where r-enter(
          | "trans-str.str"
          , "apply-debug-trans-debug"
          , LocationInfo("68", "3", "71", "24")
          )
    where <s-var(
           | "trans-str.str"
           , "apply-debug-trans-debug"
           , "input"
           , LocationInfo("69", "4", "69", "9")
           )> input
    where s-step(
          | "trans-str.str"
          , "apply-debug-trans-debug"
          , LocationInfo("70", "10", "70", "42")
          )
          ; debug(
              s-step(
              | "trans-str.str"
              , "apply-debug-trans-debug"
              , LocationInfo("70", "16", "70", "41")
              )
              ; !"transform (debug=true)"
            )
    with s-step(
         | "trans-str.str"
         , "apply-debug-trans-debug"
         , LocationInfo("71", "9", "71", "24")
         )
         ; output := input
         ; <s-var(
            | "trans-str.str"
            , "apply-debug-trans-debug"
            , "output"
            , LocationInfo("71", "9", "71", "15")
            )> output

  apply-debug-trans-error :
    false-arguments -> <r-exit(
                        | "trans-str.str"
                        , "apply-debug-trans-error"
                        , LocationInfo("73", "3", "80", "5")
                        )> (status, outputfilename)
    where r-enter(
          | "trans-str.str"
          , "apply-debug-trans-error"
          , LocationInfo("73", "3", "80", "5")
          )
    where <s-var(
           | "trans-str.str"
           , "apply-debug-trans-error"
           , "false-arguments"
           , LocationInfo("74", "4", "74", "19")
           )> false-arguments
    where (s-step(
           | "trans-str.str"
           , "apply-debug-trans-error"
           , LocationInfo("76", "5", "76", "63")
           )
           ; not(s-step(
                 | "trans-str.str"
                 , "apply-debug-trans-error"
                 , LocationInfo("76", "9", "76", "62")
                 )
                 ; ?(i_sourceBasedir, i_inputfilePath, i_outputfilename)))
          ; (s-step(
             | "trans-str.str"
             , "apply-debug-trans-error"
             , LocationInfo("77", "7", "77", "33")
             )
             ; echo(
                 s-step(
                 | "trans-str.str"
                 , "apply-debug-trans-error"
                 , LocationInfo("77", "12", "77", "32")
                 )
                 ; !"Wrong arguments: "
               ))
          ; (s-step(
             | "trans-str.str"
             , "apply-debug-trans-error"
             , LocationInfo("78", "7", "78", "27")
             )
             ; outputfilename := ""
             ; <s-var(
                | "trans-str.str"
                , "apply-debug-trans-error"
                , "outputfilename"
                , LocationInfo("78", "7", "78", "21")
                )> outputfilename)
          ; s-step(
            | "trans-str.str"
            , "apply-debug-trans-error"
            , LocationInfo("79", "7", "79", "23")
            )
          ; status := "FAIL"
          ; <s-var(
             | "trans-str.str"
             , "apply-debug-trans-error"
             , "status"
             , LocationInfo("79", "7", "79", "13")
             )> status

  apply-debug-project =
    s-enter(
    | "trans-str.str"
    , "apply-debug-project"
    , LocationInfo("82", "4", "82", "53")
    )
    ; (s-step(
       | "trans-str.str"
       , "apply-debug-project"
       , LocationInfo("82", "26", "82", "53")
       )
       ; apply-debug-project(|["."])
       < s-exit(
         | "trans-str.str"
         , "apply-debug-project"
         , LocationInfo("82", "4", "82", "53")
         )
       + s-exit(
         | "trans-str.str"
         , "apply-debug-project"
         , LocationInfo("82", "4", "82", "53")
         )
         ; fail)

  apply-debug-project(|library-paths):
    (base-path, output-base-path, stratego-file) -> <r-exit(
                                                     | "trans-str.str"
                                                     , "apply-debug-project"
                                                     , LocationInfo("88", "2", "95", "78")
                                                     )> results
    where r-enter(
          | "trans-str.str"
          , "apply-debug-project"
          , LocationInfo("88", "2", "95", "78")
          )
    where <s-var(
           | "trans-str.str"
           , "apply-debug-project"
           , "library-paths"
           , LocationInfo("88", "23", "88", "36")
           )> library-paths
    where <s-var(
           | "trans-str.str"
           , "apply-debug-project"
           , "base-path"
           , LocationInfo("89", "4", "89", "13")
           )> base-path
          ; <s-var(
             | "trans-str.str"
             , "apply-debug-project"
             , "output-base-path"
             , LocationInfo("89", "15", "89", "31")
             )> output-base-path
          ; <s-var(
             | "trans-str.str"
             , "apply-debug-project"
             , "stratego-file"
             , LocationInfo("89", "33", "89", "46")
             )> stratego-file
    where <(s-step(
            | "trans-str.str"
            , "apply-debug-project"
            , LocationInfo("91", "5", "91", "19")
            )
            ; concat-strings)> [base-path, "/", stratego-file]
          ; (s-step(
             | "trans-str.str"
             , "apply-debug-project"
             , LocationInfo("92", "8", "92", "53")
             )
             ; files := <s-step(
                         | "trans-str.str"
                         , "apply-debug-project"
                         , LocationInfo("92", "18", "92", "52")
                         )
                         ; get-internal-files(|library-paths)>
             ; <s-var(
                | "trans-str.str"
                , "apply-debug-project"
                , "files"
                , LocationInfo("92", "8", "92", "13")
                )> files)
          ; (s-step(
             | "trans-str.str"
             , "apply-debug-project"
             , LocationInfo("93", "8", "93", "45")
             )
             ; missing := <s-step(
                           | "trans-str.str"
                           , "apply-debug-project"
                           , LocationInfo("93", "20", "93", "38")
                           )
                           ; filter(
                               s-step(
                               | "trans-str.str"
                               , "apply-debug-project"
                               , LocationInfo("93", "27", "93", "37")
                               )
                               ; is-relpath
                             )> files
             ; <s-var(
                | "trans-str.str"
                , "apply-debug-project"
                , "missing"
                , LocationInfo("93", "8", "93", "15")
                )> missing)
          ; (s-step(
             | "trans-str.str"
             , "apply-debug-project"
             , LocationInfo("94", "8", "94", "48")
             )
             ; real-files := <s-step(
                              | "trans-str.str"
                              , "apply-debug-project"
                              , LocationInfo("94", "23", "94", "41")
                              )
                              ; filter(
                                  s-step(
                                  | "trans-str.str"
                                  , "apply-debug-project"
                                  , LocationInfo("94", "30", "94", "40")
                                  )
                                  ; is-abspath
                                )> files
             ; <s-var(
                | "trans-str.str"
                , "apply-debug-project"
                , "real-files"
                , LocationInfo("94", "8", "94", "18")
                )> real-files)
          ; s-step(
            | "trans-str.str"
            , "apply-debug-project"
            , LocationInfo("95", "8", "95", "78")
            )
          ; results := <s-step(
                        | "trans-str.str"
                        , "apply-debug-project"
                        , LocationInfo("95", "20", "95", "66")
                        )
                        ; map(
                            s-step(
                            | "trans-str.str"
                            , "apply-debug-project"
                            , LocationInfo("95", "24", "95", "65")
                            )
                            ; handle-file(|base-path, output-base-path)
                          )> real-files
          ; <s-var(
             | "trans-str.str"
             , "apply-debug-project"
             , "results"
             , LocationInfo("95", "8", "95", "15")
             )> results

  prefer-rtree =
    s-enter(
    | "trans-str.str"
    , "prefer-rtree"
    , LocationInfo("98", "2", "99", "40")
    )
    ; (<(s-step(
         | "trans-str.str"
         , "prefer-rtree"
         , LocationInfo("99", "4", "99", "14")
         )
         ; set-config)> ("--output-rtree", "on")
       < s-exit(
         | "trans-str.str"
         , "prefer-rtree"
         , LocationInfo("98", "2", "99", "40")
         )
       + s-exit(
         | "trans-str.str"
         , "prefer-rtree"
         , LocationInfo("98", "2", "99", "40")
         )
         ; fail)

  prefer-str =
    s-enter(
    | "trans-str.str"
    , "prefer-str"
    , LocationInfo("101", "2", "102", "31")
    )
    ; (<(s-step(
         | "trans-str.str"
         , "prefer-str"
         , LocationInfo("102", "4", "102", "13")
         )
         ; rm-config)> "--output-rtree"
       < s-exit(
         | "trans-str.str"
         , "prefer-str"
         , LocationInfo("101", "2", "102", "31")
         )
       + s-exit(
         | "trans-str.str"
         , "prefer-str"
         , LocationInfo("101", "2", "102", "31")
         )
         ; fail)