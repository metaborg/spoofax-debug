module gen-debug-info

imports
  strategodebuglib


imports
  libstratego-lib
  include/Test
  assert
  gen-debug-step
  gen-debug-var
  gen-debug-entry
  location-util


strategies
  filter-location =
    s-enter(
    | "gen-debug-info.str"
    , "filter-location"
    , LocationInfo("27", "5", "27", "25")
    )
    ; (s-step(
       | "gen-debug-info.str"
       , "filter-location"
       , LocationInfo("27", "23", "27", "25")
       )
       ; id
       < s-exit(
         | "gen-debug-info.str"
         , "filter-location"
         , LocationInfo("27", "5", "27", "25")
         )
       + s-exit(
         | "gen-debug-info.str"
         , "filter-location"
         , LocationInfo("27", "5", "27", "25")
         )
         ; fail)


strategies
  add-debug-info(|filename) =
    s-enter(
    | "gen-debug-info.str"
    , "add-debug-info"
    , LocationInfo("56", "2", "62", "23")
    )
    ; (where(<s-var(
              | "gen-debug-info.str"
              , "add-debug-info"
              , "filename"
              , LocationInfo("56", "18", "56", "26")
              )> filename)
       ; (s-step(
          | "gen-debug-info.str"
          , "add-debug-info"
          , LocationInfo("57", "3", "57", "33")
          )
          ; add-step-statements(|filename))
       ; (s-step(
          | "gen-debug-info.str"
          , "add-debug-info"
          , LocationInfo("59", "5", "59", "34")
          )
          ; add-var-statements(|filename))
       ; (s-step(
          | "gen-debug-info.str"
          , "add-debug-info"
          , LocationInfo("60", "5", "60", "42")
          )
          ; add-s-entry-and-exit-calls(|filename))
       ; (s-step(
          | "gen-debug-info.str"
          , "add-debug-info"
          , LocationInfo("61", "5", "61", "42")
          )
          ; add-r-entry-and-exit-calls(|filename))
       ; s-step(
         | "gen-debug-info.str"
         , "add-debug-info"
         , LocationInfo("62", "5", "62", "23")
         )
       ; add-s-debug-import
       < s-exit(
         | "gen-debug-info.str"
         , "add-debug-info"
         , LocationInfo("56", "2", "62", "23")
         )
       + s-exit(
         | "gen-debug-info.str"
         , "add-debug-info"
         , LocationInfo("56", "2", "62", "23")
         )
         ; fail)

  add-s-entry-and-exit-calls(|filename) =
    s-enter(
    | "gen-debug-info.str"
    , "add-s-entry-and-exit-calls"
    , LocationInfo("65", "3", "66", "55")
    )
    ; (where(<s-var(
              | "gen-debug-info.str"
              , "add-s-entry-and-exit-calls"
              , "filename"
              , LocationInfo("65", "31", "65", "39")
              )> filename)
       ; s-step(
         | "gen-debug-info.str"
         , "add-s-entry-and-exit-calls"
         , LocationInfo("66", "4", "66", "55")
         )
       ; bottomup(
           s-step(
           | "gen-debug-info.str"
           , "add-s-entry-and-exit-calls"
           , LocationInfo("66", "13", "66", "54")
           )
           ; try(
               s-step(
               | "gen-debug-info.str"
               , "add-s-entry-and-exit-calls"
               , LocationInfo("66", "17", "66", "53")
               )
               ; add-s-entry-and-exit-call(|filename)
             )
         )
       < s-exit(
         | "gen-debug-info.str"
         , "add-s-entry-and-exit-calls"
         , LocationInfo("65", "3", "66", "55")
         )
       + s-exit(
         | "gen-debug-info.str"
         , "add-s-entry-and-exit-calls"
         , LocationInfo("65", "3", "66", "55")
         )
         ; fail)

  add-r-entry-and-exit-calls(|filename) =
    s-enter(
    | "gen-debug-info.str"
    , "add-r-entry-and-exit-calls"
    , LocationInfo("69", "3", "70", "55")
    )
    ; (where(<s-var(
              | "gen-debug-info.str"
              , "add-r-entry-and-exit-calls"
              , "filename"
              , LocationInfo("69", "31", "69", "39")
              )> filename)
       ; s-step(
         | "gen-debug-info.str"
         , "add-r-entry-and-exit-calls"
         , LocationInfo("70", "4", "70", "55")
         )
       ; bottomup(
           s-step(
           | "gen-debug-info.str"
           , "add-r-entry-and-exit-calls"
           , LocationInfo("70", "13", "70", "54")
           )
           ; try(
               s-step(
               | "gen-debug-info.str"
               , "add-r-entry-and-exit-calls"
               , LocationInfo("70", "17", "70", "53")
               )
               ; add-r-entry-and-exit-call(|filename)
             )
         )
       < s-exit(
         | "gen-debug-info.str"
         , "add-r-entry-and-exit-calls"
         , LocationInfo("69", "3", "70", "55")
         )
       + s-exit(
         | "gen-debug-info.str"
         , "add-r-entry-and-exit-calls"
         , LocationInfo("69", "3", "70", "55")
         )
         ; fail)


rules

  add-s-entry-and-exit-call(|filename):
    SDefNoArgs(s-name, s){a} -> <r-exit(
                                 | "gen-debug-info.str"
                                 , "add-s-entry-and-exit-call"
                                 , LocationInfo("78", "2", "80", "46")
                                 )> SDefNoArgs(s-name, s')
    where r-enter(
          | "gen-debug-info.str"
          , "add-s-entry-and-exit-call"
          , LocationInfo("78", "2", "80", "46")
          )
    where <s-var(
           | "gen-debug-info.str"
           , "add-s-entry-and-exit-call"
           , "filename"
           , LocationInfo("78", "29", "78", "37")
           )> filename
    where <s-var(
           | "gen-debug-info.str"
           , "add-s-entry-and-exit-call"
           , "s-name"
           , LocationInfo("79", "14", "79", "20")
           )> s-name
          ; <s-var(
             | "gen-debug-info.str"
             , "add-s-entry-and-exit-call"
             , "s"
             , LocationInfo("79", "22", "79", "23")
             )> s
          ; <s-var(
             | "gen-debug-info.str"
             , "add-s-entry-and-exit-call"
             , "a"
             , LocationInfo("79", "25", "79", "26")
             )> a
    with s-step(
         | "gen-debug-info.str"
         , "add-s-entry-and-exit-call"
         , LocationInfo("80", "8", "80", "46")
         )
         ; s' := <s-step(
                  | "gen-debug-info.str"
                  , "add-s-entry-and-exit-call"
                  , LocationInfo("80", "15", "80", "43")
                  )
                  ; wrap-s(|filename, s-name, a)> s
         ; <s-var(
            | "gen-debug-info.str"
            , "add-s-entry-and-exit-call"
            , "s'"
            , LocationInfo("80", "8", "80", "10")
            )> s'

  add-s-entry-and-exit-call(|filename):
    SDef(s-name, s-args, s){a} -> <r-exit(
                                   | "gen-debug-info.str"
                                   , "add-s-entry-and-exit-call"
                                   , LocationInfo("81", "2", "83", "46")
                                   )> SDef(s-name, s-args, s')
    where r-enter(
          | "gen-debug-info.str"
          , "add-s-entry-and-exit-call"
          , LocationInfo("81", "2", "83", "46")
          )
    where <s-var(
           | "gen-debug-info.str"
           , "add-s-entry-and-exit-call"
           , "filename"
           , LocationInfo("81", "29", "81", "37")
           )> filename
    where <s-var(
           | "gen-debug-info.str"
           , "add-s-entry-and-exit-call"
           , "s-name"
           , LocationInfo("82", "8", "82", "14")
           )> s-name
          ; <s-var(
             | "gen-debug-info.str"
             , "add-s-entry-and-exit-call"
             , "s-args"
             , LocationInfo("82", "16", "82", "22")
             )> s-args
          ; <s-var(
             | "gen-debug-info.str"
             , "add-s-entry-and-exit-call"
             , "s"
             , LocationInfo("82", "24", "82", "25")
             )> s
          ; <s-var(
             | "gen-debug-info.str"
             , "add-s-entry-and-exit-call"
             , "a"
             , LocationInfo("82", "27", "82", "28")
             )> a
    with s-step(
         | "gen-debug-info.str"
         , "add-s-entry-and-exit-call"
         , LocationInfo("83", "8", "83", "46")
         )
         ; s' := <s-step(
                  | "gen-debug-info.str"
                  , "add-s-entry-and-exit-call"
                  , LocationInfo("83", "15", "83", "43")
                  )
                  ; wrap-s(|filename, s-name, a)> s
         ; <s-var(
            | "gen-debug-info.str"
            , "add-s-entry-and-exit-call"
            , "s'"
            , LocationInfo("83", "8", "83", "10")
            )> s'

  add-s-entry-and-exit-call(|filename):
    SDefT(s-name, s-args, t-args, s){a} -> <r-exit(
                                            | "gen-debug-info.str"
                                            , "add-s-entry-and-exit-call"
                                            , LocationInfo("84", "2", "86", "46")
                                            )> SDefT(s-name, s-args, t-args, s')
    where r-enter(
          | "gen-debug-info.str"
          , "add-s-entry-and-exit-call"
          , LocationInfo("84", "2", "86", "46")
          )
    where <s-var(
           | "gen-debug-info.str"
           , "add-s-entry-and-exit-call"
           , "filename"
           , LocationInfo("84", "29", "84", "37")
           )> filename
    where <s-var(
           | "gen-debug-info.str"
           , "add-s-entry-and-exit-call"
           , "s-name"
           , LocationInfo("85", "9", "85", "15")
           )> s-name
          ; <s-var(
             | "gen-debug-info.str"
             , "add-s-entry-and-exit-call"
             , "s-args"
             , LocationInfo("85", "17", "85", "23")
             )> s-args
          ; <s-var(
             | "gen-debug-info.str"
             , "add-s-entry-and-exit-call"
             , "t-args"
             , LocationInfo("85", "25", "85", "31")
             )> t-args
          ; <s-var(
             | "gen-debug-info.str"
             , "add-s-entry-and-exit-call"
             , "s"
             , LocationInfo("85", "33", "85", "34")
             )> s
          ; <s-var(
             | "gen-debug-info.str"
             , "add-s-entry-and-exit-call"
             , "a"
             , LocationInfo("85", "36", "85", "37")
             )> a
    with s-step(
         | "gen-debug-info.str"
         , "add-s-entry-and-exit-call"
         , LocationInfo("86", "8", "86", "46")
         )
         ; s' := <s-step(
                  | "gen-debug-info.str"
                  , "add-s-entry-and-exit-call"
                  , LocationInfo("86", "15", "86", "43")
                  )
                  ; wrap-s(|filename, s-name, a)> s
         ; <s-var(
            | "gen-debug-info.str"
            , "add-s-entry-and-exit-call"
            , "s'"
            , LocationInfo("86", "8", "86", "10")
            )> s'

  wrap-s(|filename, s-name, a):
    s -> <r-exit(
          | "gen-debug-info.str"
          , "wrap-s"
          , LocationInfo("94", "2", "103", "36")
          )> out
    where r-enter(
          | "gen-debug-info.str"
          , "wrap-s"
          , LocationInfo("94", "2", "103", "36")
          )
    where <s-var(
           | "gen-debug-info.str"
           , "wrap-s"
           , "filename"
           , LocationInfo("94", "10", "94", "18")
           )> filename
          ; <s-var(
             | "gen-debug-info.str"
             , "wrap-s"
             , "s-name"
             , LocationInfo("94", "20", "94", "26")
             )> s-name
          ; <s-var(
             | "gen-debug-info.str"
             , "wrap-s"
             , "a"
             , LocationInfo("94", "28", "94", "29")
             )> a
    where <s-var(
           | "gen-debug-info.str"
           , "wrap-s"
           , "s"
           , LocationInfo("95", "3", "95", "4")
           )> s
    with (s-step(
          | "gen-debug-info.str"
          , "wrap-s"
          , LocationInfo("98", "4", "98", "58")
          )
          ; s-enter := <s-step(
                        | "gen-debug-info.str"
                        , "wrap-s"
                        , LocationInfo("98", "16", "98", "57")
                        )
                        ; create-s-enter-call(|filename, s-name, a)>
          ; <s-var(
             | "gen-debug-info.str"
             , "wrap-s"
             , "s-enter"
             , LocationInfo("98", "4", "98", "11")
             )> s-enter)
         ; (s-step(
            | "gen-debug-info.str"
            , "wrap-s"
            , LocationInfo("99", "6", "99", "58")
            )
            ; s-exit := <s-step(
                         | "gen-debug-info.str"
                         , "wrap-s"
                         , LocationInfo("99", "17", "99", "57")
                         )
                         ; create-s-exit-call(|filename, s-name, a)>
            ; <s-var(
               | "gen-debug-info.str"
               , "wrap-s"
               , "s-exit"
               , LocationInfo("99", "6", "99", "12")
               )> s-exit)
         ; (s-step(
            | "gen-debug-info.str"
            , "wrap-s"
            , LocationInfo("100", "6", "100", "24")
            )
            ; f := <s-step(
                    | "gen-debug-info.str"
                    , "wrap-s"
                    , LocationInfo("100", "12", "100", "23")
                    )
                    ; create-fail>
            ; <s-var(
               | "gen-debug-info.str"
               , "wrap-s"
               , "f"
               , LocationInfo("100", "6", "100", "7")
               )> f)
         ; (s-step(
            | "gen-debug-info.str"
            , "wrap-s"
            , LocationInfo("101", "6", "101", "35")
            )
            ; s-exit-fail := Seq(s-exit, f)
            ; <s-var(
               | "gen-debug-info.str"
               , "wrap-s"
               , "s-exit-fail"
               , LocationInfo("101", "6", "101", "17")
               )> s-exit-fail)
         ; (s-step(
            | "gen-debug-info.str"
            , "wrap-s"
            , LocationInfo("102", "6", "102", "57")
            )
            ; body-exit := GuardedLChoice(s, s-exit, s-exit-fail)
            ; <s-var(
               | "gen-debug-info.str"
               , "wrap-s"
               , "body-exit"
               , LocationInfo("102", "6", "102", "15")
               )> body-exit)
         ; s-step(
           | "gen-debug-info.str"
           , "wrap-s"
           , LocationInfo("103", "6", "103", "36")
           )
         ; out := Seq(s-enter, body-exit)
         ; <s-var(
            | "gen-debug-info.str"
            , "wrap-s"
            , "out"
            , LocationInfo("103", "6", "103", "9")
            )> out

  add-r-entry-and-exit-call(|filename):
    RDefNoArgs(r-name, r){a} -> <r-exit(
                                 | "gen-debug-info.str"
                                 , "add-r-entry-and-exit-call"
                                 , LocationInfo("108", "2", "110", "46")
                                 )> RDefNoArgs(r-name, r')
    where r-enter(
          | "gen-debug-info.str"
          , "add-r-entry-and-exit-call"
          , LocationInfo("108", "2", "110", "46")
          )
    where <s-var(
           | "gen-debug-info.str"
           , "add-r-entry-and-exit-call"
           , "filename"
           , LocationInfo("108", "29", "108", "37")
           )> filename
    where <s-var(
           | "gen-debug-info.str"
           , "add-r-entry-and-exit-call"
           , "r-name"
           , LocationInfo("109", "14", "109", "20")
           )> r-name
          ; <s-var(
             | "gen-debug-info.str"
             , "add-r-entry-and-exit-call"
             , "r"
             , LocationInfo("109", "22", "109", "23")
             )> r
          ; <s-var(
             | "gen-debug-info.str"
             , "add-r-entry-and-exit-call"
             , "a"
             , LocationInfo("109", "25", "109", "26")
             )> a
    with s-step(
         | "gen-debug-info.str"
         , "add-r-entry-and-exit-call"
         , LocationInfo("110", "8", "110", "46")
         )
         ; r' := <s-step(
                  | "gen-debug-info.str"
                  , "add-r-entry-and-exit-call"
                  , LocationInfo("110", "15", "110", "43")
                  )
                  ; wrap-r(|filename, r-name, a)> r
         ; <s-var(
            | "gen-debug-info.str"
            , "add-r-entry-and-exit-call"
            , "r'"
            , LocationInfo("110", "8", "110", "10")
            )> r'

  add-r-entry-and-exit-call(|filename):
    RDef(r-name, s-args, r){a} -> <r-exit(
                                   | "gen-debug-info.str"
                                   , "add-r-entry-and-exit-call"
                                   , LocationInfo("112", "2", "114", "46")
                                   )> RDef(r-name, s-args, r')
    where r-enter(
          | "gen-debug-info.str"
          , "add-r-entry-and-exit-call"
          , LocationInfo("112", "2", "114", "46")
          )
    where <s-var(
           | "gen-debug-info.str"
           , "add-r-entry-and-exit-call"
           , "filename"
           , LocationInfo("112", "29", "112", "37")
           )> filename
    where <s-var(
           | "gen-debug-info.str"
           , "add-r-entry-and-exit-call"
           , "r-name"
           , LocationInfo("113", "8", "113", "14")
           )> r-name
          ; <s-var(
             | "gen-debug-info.str"
             , "add-r-entry-and-exit-call"
             , "s-args"
             , LocationInfo("113", "16", "113", "22")
             )> s-args
          ; <s-var(
             | "gen-debug-info.str"
             , "add-r-entry-and-exit-call"
             , "r"
             , LocationInfo("113", "24", "113", "25")
             )> r
          ; <s-var(
             | "gen-debug-info.str"
             , "add-r-entry-and-exit-call"
             , "a"
             , LocationInfo("113", "27", "113", "28")
             )> a
    with s-step(
         | "gen-debug-info.str"
         , "add-r-entry-and-exit-call"
         , LocationInfo("114", "8", "114", "46")
         )
         ; r' := <s-step(
                  | "gen-debug-info.str"
                  , "add-r-entry-and-exit-call"
                  , LocationInfo("114", "15", "114", "43")
                  )
                  ; wrap-r(|filename, r-name, a)> r
         ; <s-var(
            | "gen-debug-info.str"
            , "add-r-entry-and-exit-call"
            , "r'"
            , LocationInfo("114", "8", "114", "10")
            )> r'

  add-r-entry-and-exit-call(|filename):
    RDefT(r-name, s-args, t-args, r){a} -> <r-exit(
                                            | "gen-debug-info.str"
                                            , "add-r-entry-and-exit-call"
                                            , LocationInfo("115", "2", "117", "46")
                                            )> RDefT(r-name, s-args, t-args, r')
    where r-enter(
          | "gen-debug-info.str"
          , "add-r-entry-and-exit-call"
          , LocationInfo("115", "2", "117", "46")
          )
    where <s-var(
           | "gen-debug-info.str"
           , "add-r-entry-and-exit-call"
           , "filename"
           , LocationInfo("115", "29", "115", "37")
           )> filename
    where <s-var(
           | "gen-debug-info.str"
           , "add-r-entry-and-exit-call"
           , "r-name"
           , LocationInfo("116", "9", "116", "15")
           )> r-name
          ; <s-var(
             | "gen-debug-info.str"
             , "add-r-entry-and-exit-call"
             , "s-args"
             , LocationInfo("116", "17", "116", "23")
             )> s-args
          ; <s-var(
             | "gen-debug-info.str"
             , "add-r-entry-and-exit-call"
             , "t-args"
             , LocationInfo("116", "25", "116", "31")
             )> t-args
          ; <s-var(
             | "gen-debug-info.str"
             , "add-r-entry-and-exit-call"
             , "r"
             , LocationInfo("116", "33", "116", "34")
             )> r
          ; <s-var(
             | "gen-debug-info.str"
             , "add-r-entry-and-exit-call"
             , "a"
             , LocationInfo("116", "36", "116", "37")
             )> a
    with s-step(
         | "gen-debug-info.str"
         , "add-r-entry-and-exit-call"
         , LocationInfo("117", "8", "117", "46")
         )
         ; r' := <s-step(
                  | "gen-debug-info.str"
                  , "add-r-entry-and-exit-call"
                  , LocationInfo("117", "15", "117", "43")
                  )
                  ; wrap-r(|filename, r-name, a)> r
         ; <s-var(
            | "gen-debug-info.str"
            , "add-r-entry-and-exit-call"
            , "r'"
            , LocationInfo("117", "8", "117", "10")
            )> r'

  wrap-r(|filename, r-name, a):
    RuleNoCond(match-term, build-term) -> <r-exit(
                                           | "gen-debug-info.str"
                                           , "wrap-r"
                                           , LocationInfo("141", "5", "145", "82")
                                           )> Rule(match-term, build-term', cond*)
    where r-enter(
          | "gen-debug-info.str"
          , "wrap-r"
          , LocationInfo("141", "5", "145", "82")
          )
    where <s-var(
           | "gen-debug-info.str"
           , "wrap-r"
           , "filename"
           , LocationInfo("141", "13", "141", "21")
           )> filename
          ; <s-var(
             | "gen-debug-info.str"
             , "wrap-r"
             , "r-name"
             , LocationInfo("141", "23", "141", "29")
             )> r-name
          ; <s-var(
             | "gen-debug-info.str"
             , "wrap-r"
             , "a"
             , LocationInfo("141", "31", "141", "32")
             )> a
    where <s-var(
           | "gen-debug-info.str"
           , "wrap-r"
           , "match-term"
           , LocationInfo("142", "17", "142", "27")
           )> match-term
          ; <s-var(
             | "gen-debug-info.str"
             , "wrap-r"
             , "build-term"
             , LocationInfo("142", "29", "142", "39")
             )> build-term
    where (s-step(
           | "gen-debug-info.str"
           , "wrap-r"
           , LocationInfo("144", "6", "144", "58")
           )
           ; cond* := <s-step(
                       | "gen-debug-info.str"
                       , "wrap-r"
                       , LocationInfo("144", "16", "144", "57")
                       )
                       ; create-r-enter-call(|filename, r-name, a)>
           ; <s-var(
              | "gen-debug-info.str"
              , "wrap-r"
              , "cond*"
              , LocationInfo("144", "6", "144", "11")
              )> cond*)
          ; s-step(
            | "gen-debug-info.str"
            , "wrap-r"
            , LocationInfo("145", "8", "145", "82")
            )
          ; build-term' := App(
                             <s-step(
                              | "gen-debug-info.str"
                              , "wrap-r"
                              , LocationInfo("145", "28", "145", "68")
                              )
                              ; create-r-exit-call(|filename, r-name, a)>
                           , build-term
                           )
          ; <s-var(
             | "gen-debug-info.str"
             , "wrap-r"
             , "build-term'"
             , LocationInfo("145", "8", "145", "19")
             )> build-term'

  wrap-r(|filename, r-name, a):
    Rule(match-term, build-term, rule-cond) -> <r-exit(
                                                | "gen-debug-info.str"
                                                , "wrap-r"
                                                , LocationInfo("198", "2", "204", "89")
                                                )> Rule(match-term, build-term', rule-cond'*)
    where r-enter(
          | "gen-debug-info.str"
          , "wrap-r"
          , LocationInfo("198", "2", "204", "89")
          )
    where <s-var(
           | "gen-debug-info.str"
           , "wrap-r"
           , "filename"
           , LocationInfo("198", "10", "198", "18")
           )> filename
          ; <s-var(
             | "gen-debug-info.str"
             , "wrap-r"
             , "r-name"
             , LocationInfo("198", "20", "198", "26")
             )> r-name
          ; <s-var(
             | "gen-debug-info.str"
             , "wrap-r"
             , "a"
             , LocationInfo("198", "28", "198", "29")
             )> a
    where <s-var(
           | "gen-debug-info.str"
           , "wrap-r"
           , "match-term"
           , LocationInfo("199", "8", "199", "18")
           )> match-term
          ; <s-var(
             | "gen-debug-info.str"
             , "wrap-r"
             , "build-term"
             , LocationInfo("199", "20", "199", "30")
             )> build-term
          ; <s-var(
             | "gen-debug-info.str"
             , "wrap-r"
             , "rule-cond"
             , LocationInfo("199", "32", "199", "41")
             )> rule-cond
    where (s-step(
           | "gen-debug-info.str"
           , "wrap-r"
           , LocationInfo("203", "13", "203", "75")
           )
           ; rule-cond'* := <s-step(
                             | "gen-debug-info.str"
                             , "wrap-r"
                             , LocationInfo("203", "29", "203", "64")
                             )
                             ; add-rule-cond(|filename, r-name, a)> rule-cond
           ; <s-var(
              | "gen-debug-info.str"
              , "wrap-r"
              , "rule-cond'*"
              , LocationInfo("203", "13", "203", "24")
              )> rule-cond'*)
          ; s-step(
            | "gen-debug-info.str"
            , "wrap-r"
            , LocationInfo("204", "15", "204", "89")
            )
          ; build-term' := App(
                             <s-step(
                              | "gen-debug-info.str"
                              , "wrap-r"
                              , LocationInfo("204", "35", "204", "75")
                              )
                              ; create-r-exit-call(|filename, r-name, a)>
                           , build-term
                           )
          ; <s-var(
             | "gen-debug-info.str"
             , "wrap-r"
             , "build-term'"
             , LocationInfo("204", "15", "204", "26")
             )> build-term'

  add-rule-cond(|filename, r-name, a):
    clause-list* -> <r-exit(
                     | "gen-debug-info.str"
                     , "add-rule-cond"
                     , LocationInfo("208", "2", "211", "100")
                     )> clause-list'*
    where r-enter(
          | "gen-debug-info.str"
          , "add-rule-cond"
          , LocationInfo("208", "2", "211", "100")
          )
    where <s-var(
           | "gen-debug-info.str"
           , "add-rule-cond"
           , "filename"
           , LocationInfo("208", "17", "208", "25")
           )> filename
          ; <s-var(
             | "gen-debug-info.str"
             , "add-rule-cond"
             , "r-name"
             , LocationInfo("208", "27", "208", "33")
             )> r-name
          ; <s-var(
             | "gen-debug-info.str"
             , "add-rule-cond"
             , "a"
             , LocationInfo("208", "35", "208", "36")
             )> a
    where <s-var(
           | "gen-debug-info.str"
           , "add-rule-cond"
           , "clause-list*"
           , LocationInfo("209", "3", "209", "15")
           )> clause-list*
    where <(s-step(
            | "gen-debug-info.str"
            , "add-rule-cond"
            , LocationInfo("210", "10", "210", "17")
            )
            ; is-list)> clause-list*
          ; s-step(
            | "gen-debug-info.str"
            , "add-rule-cond"
            , LocationInfo("211", "5", "211", "100")
            )
          ; clause-list'* := <s-step(
                              | "gen-debug-info.str"
                              , "add-rule-cond"
                              , LocationInfo("211", "23", "211", "29")
                              )
                              ; insert> ( 0
                                        , <s-step(
                                           | "gen-debug-info.str"
                                           , "add-rule-cond"
                                           , LocationInfo("211", "36", "211", "84")
                                           )
                                           ; create-r-enter-whereclause(|filename, r-name, a)>
                                        , clause-list*
                                        )
          ; <s-var(
             | "gen-debug-info.str"
             , "add-rule-cond"
             , "clause-list'*"
             , LocationInfo("211", "5", "211", "18")
             )> clause-list'*

  add-rule-cond(|filename, r-name, a):
    s -> <r-exit(
          | "gen-debug-info.str"
          , "add-rule-cond"
          , LocationInfo("216", "2", "219", "93")
          )> clause-list*
    where r-enter(
          | "gen-debug-info.str"
          , "add-rule-cond"
          , LocationInfo("216", "2", "219", "93")
          )
    where <s-var(
           | "gen-debug-info.str"
           , "add-rule-cond"
           , "filename"
           , LocationInfo("216", "17", "216", "25")
           )> filename
          ; <s-var(
             | "gen-debug-info.str"
             , "add-rule-cond"
             , "r-name"
             , LocationInfo("216", "27", "216", "33")
             )> r-name
          ; <s-var(
             | "gen-debug-info.str"
             , "add-rule-cond"
             , "a"
             , LocationInfo("216", "35", "216", "36")
             )> a
    where <s-var(
           | "gen-debug-info.str"
           , "add-rule-cond"
           , "s"
           , LocationInfo("217", "3", "217", "4")
           )> s
    where s-step(
          | "gen-debug-info.str"
          , "add-rule-cond"
          , LocationInfo("218", "9", "218", "25")
          )
          ; not(<(s-step(
                  | "gen-debug-info.str"
                  , "add-rule-cond"
                  , LocationInfo("218", "14", "218", "21")
                  )
                  ; is-list)> s)
    where s-step(
          | "gen-debug-info.str"
          , "add-rule-cond"
          , LocationInfo("219", "9", "219", "93")
          )
          ; clause-list* := [ <s-step(
                               | "gen-debug-info.str"
                               , "add-rule-cond"
                               , LocationInfo("219", "27", "219", "75")
                               )
                               ; create-r-enter-whereclause(|filename, r-name, a)>
                            , WhereClause(s)
                            ]
          ; <s-var(
             | "gen-debug-info.str"
             , "add-rule-cond"
             , "clause-list*"
             , LocationInfo("219", "9", "219", "21")
             )> clause-list*

  create-r-enter-whereclause(|filename, r-name, a) =
    s-enter(
    | "gen-debug-info.str"
    , "create-r-enter-whereclause"
    , LocationInfo("223", "5", "225", "16")
    )
    ; (where(<s-var(
              | "gen-debug-info.str"
              , "create-r-enter-whereclause"
              , "filename"
              , LocationInfo("223", "33", "223", "41")
              )> filename
             ; <s-var(
                | "gen-debug-info.str"
                , "create-r-enter-whereclause"
                , "r-name"
                , LocationInfo("223", "43", "223", "49")
                )> r-name
             ; <s-var(
                | "gen-debug-info.str"
                , "create-r-enter-whereclause"
                , "a"
                , LocationInfo("223", "51", "223", "52")
                )> a)
       ; s-step(
         | "gen-debug-info.str"
         , "create-r-enter-whereclause"
         , LocationInfo("223", "56", "225", "16")
         )
       ; !WhereClause(
            <s-step(
             | "gen-debug-info.str"
             , "create-r-enter-whereclause"
             , LocationInfo("224", "18", "224", "59")
             )
             ; create-r-enter-call(|filename, r-name, a)>
          )
       < s-exit(
         | "gen-debug-info.str"
         , "create-r-enter-whereclause"
         , LocationInfo("223", "5", "225", "16")
         )
       + s-exit(
         | "gen-debug-info.str"
         , "create-r-enter-whereclause"
         , LocationInfo("223", "5", "225", "16")
         )
         ; fail)

  add-s-debug-import :
    Module(x, def*) -> <r-exit(
                        | "gen-debug-info.str"
                        , "add-s-debug-import"
                        , LocationInfo("229", "2", "232", "74")
                        )> Module(x, def'*)
    where r-enter(
          | "gen-debug-info.str"
          , "add-s-debug-import"
          , LocationInfo("229", "2", "232", "74")
          )
    where <s-var(
           | "gen-debug-info.str"
           , "add-s-debug-import"
           , "x"
           , LocationInfo("230", "10", "230", "11")
           )> x
          ; <s-var(
             | "gen-debug-info.str"
             , "add-s-debug-import"
             , "def*"
             , LocationInfo("230", "13", "230", "17")
             )> def*
    with s-step(
         | "gen-debug-info.str"
         , "add-s-debug-import"
         , LocationInfo("232", "8", "232", "74")
         )
         ; def'* := <s-step(
                     | "gen-debug-info.str"
                     , "add-s-debug-import"
                     , LocationInfo("232", "18", "232", "24")
                     )
                     ; insert> ( 0
                               , Imports([Import("strategodebuglib")])
                               , def*
                               )
         ; <s-var(
            | "gen-debug-info.str"
            , "add-s-debug-import"
            , "def'*"
            , LocationInfo("232", "8", "232", "13")
            )> def'*


strategies
  create-r-exit-call(|filename, r-name, a) =
    s-enter(
    | "gen-debug-info.str"
    , "create-r-exit-call"
    , LocationInfo("242", "5", "242", "150")
    )
    ; (where(<s-var(
              | "gen-debug-info.str"
              , "create-r-exit-call"
              , "filename"
              , LocationInfo("242", "25", "242", "33")
              )> filename
             ; <s-var(
                | "gen-debug-info.str"
                , "create-r-exit-call"
                , "r-name"
                , LocationInfo("242", "35", "242", "41")
                )> r-name
             ; <s-var(
                | "gen-debug-info.str"
                , "create-r-exit-call"
                , "a"
                , LocationInfo("242", "43", "242", "44")
                )> a)
       ; s-step(
         | "gen-debug-info.str"
         , "create-r-exit-call"
         , LocationInfo("242", "48", "242", "150")
         )
       ; !CallT(
            SVar("r-exit")
          , []
          , [ NoAnnoList(Str(filename))
            , NoAnnoList(Str(r-name))
            , <s-step(
               | "gen-debug-info.str"
               , "create-r-exit-call"
               , LocationInfo("242", "129", "242", "145")
               )
               ; location-to-term> a
            ]
          )
       < s-exit(
         | "gen-debug-info.str"
         , "create-r-exit-call"
         , LocationInfo("242", "5", "242", "150")
         )
       + s-exit(
         | "gen-debug-info.str"
         , "create-r-exit-call"
         , LocationInfo("242", "5", "242", "150")
         )
         ; fail)

  create-r-enter-call(|filename, r-name, a) =
    s-enter(
    | "gen-debug-info.str"
    , "create-r-enter-call"
    , LocationInfo("244", "5", "244", "152")
    )
    ; (where(<s-var(
              | "gen-debug-info.str"
              , "create-r-enter-call"
              , "filename"
              , LocationInfo("244", "26", "244", "34")
              )> filename
             ; <s-var(
                | "gen-debug-info.str"
                , "create-r-enter-call"
                , "r-name"
                , LocationInfo("244", "36", "244", "42")
                )> r-name
             ; <s-var(
                | "gen-debug-info.str"
                , "create-r-enter-call"
                , "a"
                , LocationInfo("244", "44", "244", "45")
                )> a)
       ; s-step(
         | "gen-debug-info.str"
         , "create-r-enter-call"
         , LocationInfo("244", "49", "244", "152")
         )
       ; !CallT(
            SVar("r-enter")
          , []
          , [ NoAnnoList(Str(filename))
            , NoAnnoList(Str(r-name))
            , <s-step(
               | "gen-debug-info.str"
               , "create-r-enter-call"
               , LocationInfo("244", "131", "244", "147")
               )
               ; location-to-term> a
            ]
          )
       < s-exit(
         | "gen-debug-info.str"
         , "create-r-enter-call"
         , LocationInfo("244", "5", "244", "152")
         )
       + s-exit(
         | "gen-debug-info.str"
         , "create-r-enter-call"
         , LocationInfo("244", "5", "244", "152")
         )
         ; fail)

  create-s-enter-call(|filename, s-name, a) =
    s-enter(
    | "gen-debug-info.str"
    , "create-s-enter-call"
    , LocationInfo("246", "5", "246", "152")
    )
    ; (where(<s-var(
              | "gen-debug-info.str"
              , "create-s-enter-call"
              , "filename"
              , LocationInfo("246", "26", "246", "34")
              )> filename
             ; <s-var(
                | "gen-debug-info.str"
                , "create-s-enter-call"
                , "s-name"
                , LocationInfo("246", "36", "246", "42")
                )> s-name
             ; <s-var(
                | "gen-debug-info.str"
                , "create-s-enter-call"
                , "a"
                , LocationInfo("246", "44", "246", "45")
                )> a)
       ; s-step(
         | "gen-debug-info.str"
         , "create-s-enter-call"
         , LocationInfo("246", "49", "246", "152")
         )
       ; !CallT(
            SVar("s-enter")
          , []
          , [ NoAnnoList(Str(filename))
            , NoAnnoList(Str(s-name))
            , <s-step(
               | "gen-debug-info.str"
               , "create-s-enter-call"
               , LocationInfo("246", "131", "246", "147")
               )
               ; location-to-term> a
            ]
          )
       < s-exit(
         | "gen-debug-info.str"
         , "create-s-enter-call"
         , LocationInfo("246", "5", "246", "152")
         )
       + s-exit(
         | "gen-debug-info.str"
         , "create-s-enter-call"
         , LocationInfo("246", "5", "246", "152")
         )
         ; fail)

  create-s-exit-call(|filename, s-name, a) =
    s-enter(
    | "gen-debug-info.str"
    , "create-s-exit-call"
    , LocationInfo("248", "5", "248", "150")
    )
    ; (where(<s-var(
              | "gen-debug-info.str"
              , "create-s-exit-call"
              , "filename"
              , LocationInfo("248", "25", "248", "33")
              )> filename
             ; <s-var(
                | "gen-debug-info.str"
                , "create-s-exit-call"
                , "s-name"
                , LocationInfo("248", "35", "248", "41")
                )> s-name
             ; <s-var(
                | "gen-debug-info.str"
                , "create-s-exit-call"
                , "a"
                , LocationInfo("248", "43", "248", "44")
                )> a)
       ; s-step(
         | "gen-debug-info.str"
         , "create-s-exit-call"
         , LocationInfo("248", "48", "248", "150")
         )
       ; !CallT(
            SVar("s-exit")
          , []
          , [ NoAnnoList(Str(filename))
            , NoAnnoList(Str(s-name))
            , <s-step(
               | "gen-debug-info.str"
               , "create-s-exit-call"
               , LocationInfo("248", "129", "248", "145")
               )
               ; location-to-term> a
            ]
          )
       < s-exit(
         | "gen-debug-info.str"
         , "create-s-exit-call"
         , LocationInfo("248", "5", "248", "150")
         )
       + s-exit(
         | "gen-debug-info.str"
         , "create-s-exit-call"
         , LocationInfo("248", "5", "248", "150")
         )
         ; fail)

  create-fail =
    s-enter(
    | "gen-debug-info.str"
    , "create-fail"
    , LocationInfo("250", "5", "250", "26")
    )
    ; (s-step(
       | "gen-debug-info.str"
       , "create-fail"
       , LocationInfo("250", "19", "250", "26")
       )
       ; !Fail()
       < s-exit(
         | "gen-debug-info.str"
         , "create-fail"
         , LocationInfo("250", "5", "250", "26")
         )
       + s-exit(
         | "gen-debug-info.str"
         , "create-fail"
         , LocationInfo("250", "5", "250", "26")
         )
         ; fail)