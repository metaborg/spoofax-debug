package org.strategoxt.imp.debug.stratego.runtime;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;

import org.eclipse.core.runtime.FileLocator;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;

public class ClasspathHandler {

	public final static String STRATEGO_DEBUG_RUNTIME_JAR_NAME = "stratego-debug-runtime.jar";
	public final static String STRATEGO_DEBUG_RUNTIME_JAVA_JAR_NAME = "stratego-debug-runtime-java.jar";
	
	private final static String RUNTIME_PROJECT_LOCATION = "org.strategoxt.imp.debug.stratego.runtime";
	
	public final static String STRATEGO_DEBUG_RUNTIME_JAR_ENTRY = "/include/" + STRATEGO_DEBUG_RUNTIME_JAR_NAME;
	public final static String STRATEGO_DEBUG_RUNTIME_JAVA_JAR_ENTRY = "/include/" + STRATEGO_DEBUG_RUNTIME_JAVA_JAR_NAME;
	/**
	 * Returns a list of locations that are generated by this plugin.
	 * The jars "stratego-debug-runtime-java.jar" and "stratego-debug-runtime.jar" are in the include dir of this plugin.
	 * 
	 * @return
	 */
	public static List<IPath> getClasspathEntries()
	{
		List<IPath> jars = new ArrayList<IPath>();
		jars.add(getPathFromBundle(STRATEGO_DEBUG_RUNTIME_JAR_ENTRY));
		jars.add(getPathFromBundle(STRATEGO_DEBUG_RUNTIME_JAVA_JAR_ENTRY));
		return jars;
	}
	
	/**
	 * Tries to get the path from the bundle using the runtime plugin activator.
	 * If the activator is null, use the ../RUNTIME_PROJECT_LOCATION path.
	 * @param pathInBundle
	 * @return
	 */
	public static IPath getPathFromBundle(String pathInBundle)
	{
		org.strategoxt.imp.debug.stratego.runtime.Activator runtimeActivator = org.strategoxt.imp.debug.stratego.runtime.Activator.getInstance();
		if (runtimeActivator == null)
		{
			//System.out.println("NO RUNTIME ACTIVATOR...");
		}
		if (runtimeActivator.getBundle() == null)
		{
			//System.out.println("NO BUNDLE... " + pathInBundle);
			String path2lib = "../" + RUNTIME_PROJECT_LOCATION + pathInBundle;
			//System.out.println("try to get from: " + path2lib);
			File f = new File(path2lib);
			String resolved = null;
			try {
				resolved = f.getCanonicalPath();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//System.out.println("Resolved to: " + resolved);
			IPath path = new Path(resolved);
			return path;
		}
		URL pathInBundleURL = runtimeActivator.getBundle().getEntry(pathInBundle);
		//System.out.println("RUNTIME: " + pathInBundleURL);
		URL fileURL = null;
		try {
			fileURL = FileLocator.toFileURL(pathInBundleURL);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		String urlPath = fileURL.getPath();
		IPath path = new Path(urlPath);
		//System.out.println("OSSTRING: " + path.toOSString());
		return path;
	}
}
